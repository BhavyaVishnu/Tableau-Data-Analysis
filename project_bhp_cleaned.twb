<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0217.1203                               -->
<workbook original-version='18.1' source-build='2020.4.2 (20204.21.0217.1203)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='parameter dimensions' datatype='string' name='[Location Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Bath&quot;'>
        <calculation class='tableau' formula='&quot;Bath&quot;' />
        <members>
          <member value='&quot;Bath&quot;' />
          <member value='&quot;Bhk&quot;' />
          <member value='&quot;Location&quot;' />
        </members>
      </column>
      <column caption='top n' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='5.0'>
        <calculation class='tableau' formula='5.0' />
        <members>
          <member value='10.0' />
          <member value='15.0' />
          <member value='5.0' />
          <member value='3.0' />
        </members>
      </column>
      <column caption='bottom n' datatype='real' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='5.0'>
        <calculation class='tableau' formula='5.0' />
        <members>
          <member value='3.0' />
          <member value='5.0' />
          <member value='10.0' />
          <member value='15.0' />
        </members>
      </column>
    </datasource>
    <datasource caption='banglore_housing_data_cleaned' inline='true' name='federated.09odcje1woexo216vzku019cxpsl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='banglore_housing_data_cleaned' name='textscan.044v4in1cgn5gz17416o70y943oi'>
            <connection class='textscan' directory='C:/Users/poc/Documents/My Tableau Repository/Workbooks/Workbooks/Exercise FIles-20210125T123410Z-001/Exercise FIles/project_BHP_1' filename='banglore_housing_data_cleaned.csv' password='' port='0' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.044v4in1cgn5gz17416o70y943oi' name='Bengaluru_House_Data.csv' table='[Bengaluru_House_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='area_type' ordinal='0' />
            <column datatype='string' name='availability' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='string' name='size' ordinal='3' />
            <column datatype='string' name='society' ordinal='4' />
            <column datatype='real' name='total_sqft' ordinal='5' />
            <column datatype='integer' name='bath' ordinal='6' />
            <column datatype='integer' name='balcony' ordinal='7' />
            <column datatype='real' name='price' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.044v4in1cgn5gz17416o70y943oi' name='banglore_housing_data_cleaned.csv' table='[banglore_housing_data_cleaned#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='location' ordinal='0' />
              <column datatype='string' name='size' ordinal='1' />
              <column datatype='real' name='total_sqft' ordinal='2' />
              <column datatype='real' name='bath' ordinal='3' />
              <column datatype='real' name='price' ordinal='4' />
              <column datatype='integer' name='bhk' ordinal='5' />
              <column datatype='real' name='price_per_sqft' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.044v4in1cgn5gz17416o70y943oi' name='Bengaluru_House_Data.csv' table='[Bengaluru_House_Data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='area_type' ordinal='0' />
              <column datatype='string' name='availability' ordinal='1' />
              <column datatype='string' name='location' ordinal='2' />
              <column datatype='string' name='size' ordinal='3' />
              <column datatype='string' name='society' ordinal='4' />
              <column datatype='real' name='total_sqft' ordinal='5' />
              <column datatype='integer' name='bath' ordinal='6' />
              <column datatype='integer' name='balcony' ordinal='7' />
              <column datatype='real' name='price' ordinal='8' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[area_type]' value='[Bengaluru_House_Data.csv].[area_type]' />
          <map key='[availability]' value='[Bengaluru_House_Data.csv].[availability]' />
          <map key='[balcony]' value='[Bengaluru_House_Data.csv].[balcony]' />
          <map key='[bath (Bengaluru_House_Data.csv)]' value='[Bengaluru_House_Data.csv].[bath]' />
          <map key='[bath]' value='[banglore_housing_data_cleaned.csv].[bath]' />
          <map key='[bhk]' value='[banglore_housing_data_cleaned.csv].[bhk]' />
          <map key='[location (Bengaluru_House_Data.csv)]' value='[Bengaluru_House_Data.csv].[location]' />
          <map key='[location]' value='[banglore_housing_data_cleaned.csv].[location]' />
          <map key='[price (Bengaluru_House_Data.csv)]' value='[Bengaluru_House_Data.csv].[price]' />
          <map key='[price]' value='[banglore_housing_data_cleaned.csv].[price]' />
          <map key='[price_per_sqft]' value='[banglore_housing_data_cleaned.csv].[price_per_sqft]' />
          <map key='[size (Bengaluru_House_Data.csv)]' value='[Bengaluru_House_Data.csv].[size]' />
          <map key='[size]' value='[banglore_housing_data_cleaned.csv].[size]' />
          <map key='[society]' value='[Bengaluru_House_Data.csv].[society]' />
          <map key='[total_sqft (Bengaluru_House_Data.csv)]' value='[Bengaluru_House_Data.csv].[total_sqft]' />
          <map key='[total_sqft]' value='[banglore_housing_data_cleaned.csv].[total_sqft]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[banglore_housing_data_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Bengaluru_House_Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[banglore_housing_data_cleaned.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[banglore_housing_data_cleaned.csv_4BB1A32AC9C64CEBADBA878BC59EBA9F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>size</remote-name>
            <remote-type>129</remote-type>
            <local-name>[size]</local-name>
            <parent-name>[banglore_housing_data_cleaned.csv]</parent-name>
            <remote-alias>size</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[banglore_housing_data_cleaned.csv_4BB1A32AC9C64CEBADBA878BC59EBA9F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_sqft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_sqft]</local-name>
            <parent-name>[banglore_housing_data_cleaned.csv]</parent-name>
            <remote-alias>total_sqft</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[banglore_housing_data_cleaned.csv_4BB1A32AC9C64CEBADBA878BC59EBA9F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bath</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bath]</local-name>
            <parent-name>[banglore_housing_data_cleaned.csv]</parent-name>
            <remote-alias>bath</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[banglore_housing_data_cleaned.csv_4BB1A32AC9C64CEBADBA878BC59EBA9F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[banglore_housing_data_cleaned.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[banglore_housing_data_cleaned.csv_4BB1A32AC9C64CEBADBA878BC59EBA9F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bhk</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bhk]</local-name>
            <parent-name>[banglore_housing_data_cleaned.csv]</parent-name>
            <remote-alias>bhk</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[banglore_housing_data_cleaned.csv_4BB1A32AC9C64CEBADBA878BC59EBA9F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_per_sqft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_per_sqft]</local-name>
            <parent-name>[banglore_housing_data_cleaned.csv]</parent-name>
            <remote-alias>price_per_sqft</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[banglore_housing_data_cleaned.csv_4BB1A32AC9C64CEBADBA878BC59EBA9F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[area_type]</local-name>
            <parent-name>[Bengaluru_House_Data.csv]</parent-name>
            <remote-alias>area_type</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bengaluru_House_Data.csv_C122E172D20F48BD94E9247C048454E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>availability</remote-name>
            <remote-type>129</remote-type>
            <local-name>[availability]</local-name>
            <parent-name>[Bengaluru_House_Data.csv]</parent-name>
            <remote-alias>availability</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bengaluru_House_Data.csv_C122E172D20F48BD94E9247C048454E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location (Bengaluru_House_Data.csv)]</local-name>
            <parent-name>[Bengaluru_House_Data.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bengaluru_House_Data.csv_C122E172D20F48BD94E9247C048454E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>size</remote-name>
            <remote-type>129</remote-type>
            <local-name>[size (Bengaluru_House_Data.csv)]</local-name>
            <parent-name>[Bengaluru_House_Data.csv]</parent-name>
            <remote-alias>size</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bengaluru_House_Data.csv_C122E172D20F48BD94E9247C048454E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>society</remote-name>
            <remote-type>129</remote-type>
            <local-name>[society]</local-name>
            <parent-name>[Bengaluru_House_Data.csv]</parent-name>
            <remote-alias>society</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bengaluru_House_Data.csv_C122E172D20F48BD94E9247C048454E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_sqft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_sqft (Bengaluru_House_Data.csv)]</local-name>
            <parent-name>[Bengaluru_House_Data.csv]</parent-name>
            <remote-alias>total_sqft</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bengaluru_House_Data.csv_C122E172D20F48BD94E9247C048454E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bath</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bath (Bengaluru_House_Data.csv)]</local-name>
            <parent-name>[Bengaluru_House_Data.csv]</parent-name>
            <remote-alias>bath</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bengaluru_House_Data.csv_C122E172D20F48BD94E9247C048454E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>balcony</remote-name>
            <remote-type>20</remote-type>
            <local-name>[balcony]</local-name>
            <parent-name>[Bengaluru_House_Data.csv]</parent-name>
            <remote-alias>balcony</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bengaluru_House_Data.csv_C122E172D20F48BD94E9247C048454E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price (Bengaluru_House_Data.csv)]</local-name>
            <parent-name>[Bengaluru_House_Data.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bengaluru_House_Data.csv_C122E172D20F48BD94E9247C048454E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Attribute' caption='exclude parameter topn' datatype='integer' name='[Calculation_15481187909922816]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ EXCLUDE  [Parameters].[Parameter 1]: COUNT([total_sqft])}' />
      </column>
      <column aggregation='Attribute' caption='lod count total sqft' datatype='integer' name='[Calculation_228839220150657025]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ EXCLUDE  [location],[price],[total_sqft],[Total Sqft (bin)],[Parameters].[Parameter 1]: COUNT([total_sqft])}' />
      </column>
      <column aggregation='Attribute' caption='exclude location price per sqft' datatype='real' name='[Calculation_558164942545129473]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{EXCLUDE [location]:AVG([price_per_sqft])}' />
      </column>
      <column caption='choose dimensions' datatype='real' name='[Calculation_633600236435890177]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Location Parameter]&#13;&#10;WHEN &quot;Bath&quot; THEN [bath]&#13;&#10;WHEN &quot;Bhk&quot; THEN [bhk]&#13;&#10;&#13;&#10;END' />
      </column>
      <column aggregation='None' datatype='integer' name='[Total Sqft (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[total_sqft]' peg='0' size='1000' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Bengaluru_House_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Bengaluru_House_Data.csv_C122E172D20F48BD94E9247C048454E3]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='banglore_housing_data_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[banglore_housing_data_cleaned.csv_4BB1A32AC9C64CEBADBA878BC59EBA9F]' role='measure' type='quantitative' />
      <column caption='Area Type' datatype='string' name='[area_type]' role='dimension' type='nominal' />
      <column caption='Availability' datatype='string' hidden='true' name='[availability]' role='dimension' type='nominal' />
      <column caption='Balcony' datatype='integer' hidden='true' name='[balcony]' role='measure' type='quantitative' />
      <column caption='bath (Bengaluru House Data.csv)' datatype='integer' hidden='true' name='[bath (Bengaluru_House_Data.csv)]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Bath' datatype='real' name='[bath]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Bhk' datatype='integer' name='[bhk]' role='dimension' type='ordinal' />
      <column aggregation='Attribute' caption='exclude bath,bhk avg price' datatype='real' name='[exclude location price per sqft (copy)_633600236430426112]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{EXCLUDE [bath],[bhk]:AVG([price])}' />
      </column>
      <column caption='location (Bengaluru House Data.csv)' datatype='string' hidden='true' name='[location (Bengaluru_House_Data.csv)]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='price (Bengaluru House Data.csv)' datatype='real' hidden='true' name='[price (Bengaluru_House_Data.csv)]' role='measure' type='quantitative' />
      <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
      <column caption='Price Per Sqft' datatype='real' name='[price_per_sqft]' role='measure' type='quantitative' />
      <column caption='size (Bengaluru House Data.csv)' datatype='string' hidden='true' name='[size (Bengaluru_House_Data.csv)]' role='dimension' type='nominal' />
      <column caption='Size' datatype='string' hidden='true' name='[size]' role='dimension' type='nominal' />
      <column caption='Society' datatype='string' hidden='true' name='[society]' role='dimension' type='nominal' />
      <column caption='total sqft (Bengaluru House Data.csv)' datatype='real' hidden='true' name='[total_sqft (Bengaluru_House_Data.csv)]' role='measure' type='quantitative' />
      <column caption='Total Sqft' datatype='real' name='[total_sqft]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_228839220150657025]' derivation='Attribute' name='[attr:Calculation_228839220150657025:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_558164942545129473]' derivation='Attribute' name='[attr:Calculation_558164942545129473:qk]' pivot='key' type='quantitative' />
      <column-instance column='[exclude location price per sqft (copy)_633600236430426112]' derivation='Attribute' name='[attr:exclude location price per sqft (copy)_633600236430426112:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_sqft]' derivation='Attribute' name='[attr:total_sqft:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price_per_sqft]' derivation='Avg' name='[avg:price_per_sqft:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_sqft]' derivation='Avg' name='[avg:total_sqft:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_sqft]' derivation='Count' name='[cnt:total_sqft:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_sqft]' derivation='CountD' name='[ctd:total_sqft:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='Max' name='[max:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price_per_sqft]' derivation='Median' name='[med:price_per_sqft:qk]' pivot='key' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[total_sqft]' derivation='None' name='[none:total_sqft:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price_per_sqft]' derivation='Stdev' name='[std:price_per_sqft:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price_per_sqft]' derivation='StdevP' name='[stp:price_per_sqft:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price_per_sqft]' derivation='Var' name='[var:price_per_sqft:qk]' pivot='key' type='quantitative' />
      <_.fcp.SchemaViewerObjectModel.false...folder name='calculations' role='dimensions'>
        <folder-item name='[Calculation_633600236435890177]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='lod' role='measures'>
        <folder-item name='[Calculation_228839220150657025]' type='field' />
        <folder-item name='[Calculation_558164942545129473]' type='field' />
        <folder-item name='[exclude location price per sqft (copy)_633600236430426112]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='calculations'>
          <folder-item name='[Calculation_633600236435890177]' type='field' />
        </folder>
        <folder name='lod'>
          <folder-item name='[Calculation_228839220150657025]' type='field' />
          <folder-item name='[Calculation_558164942545129473]' type='field' />
          <folder-item name='[exclude location price per sqft (copy)_633600236430426112]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.859688' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.140312' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09odcje1woexo216vzku019cxpsl]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09odcje1woexo216vzku019cxpsl].[avg:price_per_sqft:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09odcje1woexo216vzku019cxpsl].[avg:price:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09odcje1woexo216vzku019cxpsl].[max:price:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09odcje1woexo216vzku019cxpsl].[med:price_per_sqft:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09odcje1woexo216vzku019cxpsl].[std:price_per_sqft:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09odcje1woexo216vzku019cxpsl].[stp:price_per_sqft:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09odcje1woexo216vzku019cxpsl].[var:price_per_sqft:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.09odcje1woexo216vzku019cxpsl].[attr:total_sqft:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.09odcje1woexo216vzku019cxpsl].[avg:total_sqft:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.09odcje1woexo216vzku019cxpsl].[cnt:total_sqft:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.09odcje1woexo216vzku019cxpsl].[ctd:total_sqft:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.09odcje1woexo216vzku019cxpsl].[none:total_sqft:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09odcje1woexo216vzku019cxpsl].[attr:exclude location price per sqft (copy)_633600236430426112:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09odcje1woexo216vzku019cxpsl].[attr:Calculation_228839220150657025:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.09odcje1woexo216vzku019cxpsl].[attr:Calculation_558164942545129473:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Abbigere&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1st Phase JP Nagar&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;1st Block Jayanagar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5th Block Hbr Layout&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;7th Phase JP Nagar&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;2nd Stage Nagarbhavi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;9th Phase JP Nagar&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;6th Phase JP Nagar&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='parameter dimensions' datatype='string' name='[Location Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Bath&quot;'>
          <calculation class='tableau' formula='&quot;Bath&quot;' />
        </column>
        <column caption='top n' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='5.0'>
          <calculation class='tableau' formula='5.0' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Bengaluru_House_Data.csv' id='Bengaluru_House_Data.csv_C122E172D20F48BD94E9247C048454E3'>
            <properties context=''>
              <relation connection='textscan.044v4in1cgn5gz17416o70y943oi' name='Bengaluru_House_Data.csv' table='[Bengaluru_House_Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='area_type' ordinal='0' />
                  <column datatype='string' name='availability' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='string' name='size' ordinal='3' />
                  <column datatype='string' name='society' ordinal='4' />
                  <column datatype='real' name='total_sqft' ordinal='5' />
                  <column datatype='integer' name='bath' ordinal='6' />
                  <column datatype='integer' name='balcony' ordinal='7' />
                  <column datatype='real' name='price' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='banglore_housing_data_cleaned.csv' id='banglore_housing_data_cleaned.csv_4BB1A32AC9C64CEBADBA878BC59EBA9F'>
            <properties context=''>
              <relation connection='textscan.044v4in1cgn5gz17416o70y943oi' name='banglore_housing_data_cleaned.csv' table='[banglore_housing_data_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='string' name='size' ordinal='1' />
                  <column datatype='real' name='total_sqft' ordinal='2' />
                  <column datatype='real' name='bath' ordinal='3' />
                  <column datatype='real' name='price' ordinal='4' />
                  <column datatype='integer' name='bhk' ordinal='5' />
                  <column datatype='real' name='price_per_sqft' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[location]' />
              <expression op='[location (Bengaluru_House_Data.csv)]' />
            </expression>
            <first-end-point object-id='banglore_housing_data_cleaned.csv_4BB1A32AC9C64CEBADBA878BC59EBA9F' />
            <second-end-point object-id='Bengaluru_House_Data.csv_C122E172D20F48BD94E9247C048454E3' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='bhk/bath vs price'>
      <table>
        <view>
          <datasources>
            <datasource caption='banglore_housing_data_cleaned' name='federated.09odcje1woexo216vzku019cxpsl' />
          </datasources>
          <datasource-dependencies datasource='federated.09odcje1woexo216vzku019cxpsl'>
            <column-instance column='[exclude location price per sqft (copy)_633600236430426112]' derivation='Attribute' name='[attr:exclude location price per sqft (copy)_633600236430426112:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Bath' datatype='real' name='[bath]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Bhk' datatype='integer' name='[bhk]' role='dimension' type='ordinal' />
            <column aggregation='Attribute' caption='exclude bath,bhk avg price' datatype='real' name='[exclude location price per sqft (copy)_633600236430426112]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{EXCLUDE [bath],[bhk]:AVG([price])}' />
            </column>
            <column-instance column='[bath]' derivation='None' name='[none:bath:ok]' pivot='key' type='ordinal' />
            <column-instance column='[bhk]' derivation='None' name='[none:bhk:ok]' pivot='key' type='ordinal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09odcje1woexo216vzku019cxpsl].[attr:exclude location price per sqft (copy)_633600236430426112:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09odcje1woexo216vzku019cxpsl].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.09odcje1woexo216vzku019cxpsl].[avg:price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.09odcje1woexo216vzku019cxpsl].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.09odcje1woexo216vzku019cxpsl].[attr:exclude location price per sqft (copy)_633600236430426112:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[federated.09odcje1woexo216vzku019cxpsl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff0000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.09odcje1woexo216vzku019cxpsl].[none:bhk:ok] / [federated.09odcje1woexo216vzku019cxpsl].[none:bath:ok])</rows>
        <cols>([federated.09odcje1woexo216vzku019cxpsl].[avg:price:qk] + [federated.09odcje1woexo216vzku019cxpsl].[attr:exclude location price per sqft (copy)_633600236430426112:qk])</cols>
      </table>
      <simple-id uuid='{D61FA6F2-AED2-4C08-83C7-EB645346851E}' />
    </worksheet>
    <worksheet name='cheapest ocations'>
      <table>
        <view>
          <datasources>
            <datasource caption='banglore_housing_data_cleaned' name='federated.09odcje1woexo216vzku019cxpsl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='bottom n' datatype='real' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.09odcje1woexo216vzku019cxpsl'>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price_per_sqft]' derivation='Avg' name='[avg:price_per_sqft:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Price Per Sqft' datatype='real' name='[price_per_sqft]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]'>
            <groupfilter count='[Parameters].[Parameter 2]' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([price])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Bisuvanahalli&quot;</bucket>
              <bucket>&quot;Doddakallasandra&quot;</bucket>
              <bucket>&quot;Doddathoguru&quot;</bucket>
              <bucket>&quot;Hoskote&quot;</bucket>
              <bucket>&quot;Kengeri Satellite Town&quot;</bucket>
              <bucket>&quot;Dommasandra&quot;</bucket>
              <bucket>&quot;Vasanthapura&quot;</bucket>
              <bucket>&quot;Kammasandra&quot;</bucket>
              <bucket>&quot;Vishwapriya Layout&quot;</bucket>
              <bucket>&quot;Kereguddadahalli&quot;</bucket>
              <bucket>&quot;Anekal&quot;</bucket>
              <bucket>&quot;Bommasandra Industrial Area&quot;</bucket>
              <bucket>&quot;Attibele&quot;</bucket>
              <bucket>&quot;Ananth Nagar&quot;</bucket>
              <bucket>&quot;Chandapura&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.09odcje1woexo216vzku019cxpsl].[avg:price:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.09odcje1woexo216vzku019cxpsl].[avg:price_per_sqft:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]</rows>
        <cols>[federated.09odcje1woexo216vzku019cxpsl].[avg:price:qk]</cols>
      </table>
      <simple-id uuid='{2AF83C89-6ACD-4F08-9DCA-5EA77BDC7CAB}' />
    </worksheet>
    <worksheet name='count of distinct sqft and location'>
      <table>
        <view>
          <datasources>
            <datasource caption='banglore_housing_data_cleaned' name='federated.09odcje1woexo216vzku019cxpsl' />
          </datasources>
          <datasource-dependencies datasource='federated.09odcje1woexo216vzku019cxpsl'>
            <column-instance column='[price_per_sqft]' derivation='Avg' name='[avg:price_per_sqft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_sqft]' derivation='Count' name='[cnt:total_sqft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='CountD' name='[ctd:location:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='Price Per Sqft' datatype='real' name='[price_per_sqft]' role='measure' type='quantitative' />
            <column caption='Total Sqft' datatype='real' name='[total_sqft]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09odcje1woexo216vzku019cxpsl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09odcje1woexo216vzku019cxpsl].[cnt:total_sqft:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09odcje1woexo216vzku019cxpsl].[ctd:location:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09odcje1woexo216vzku019cxpsl].[avg:price_per_sqft:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.09odcje1woexo216vzku019cxpsl].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.09odcje1woexo216vzku019cxpsl].[cnt:total_sqft:qk]&quot;</bucket>
              <bucket>&quot;[federated.09odcje1woexo216vzku019cxpsl].[ctd:location:qk]&quot;</bucket>
              <bucket>&quot;[federated.09odcje1woexo216vzku019cxpsl].[avg:price_per_sqft:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.09odcje1woexo216vzku019cxpsl].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09odcje1woexo216vzku019cxpsl].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09odcje1woexo216vzku019cxpsl].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{D4F1BCF1-296C-4C64-B4B1-FE69E0330DDE}' />
    </worksheet>
    <worksheet name='count of sqft or houses available in bottom n locations'>
      <table>
        <view>
          <datasources>
            <datasource caption='banglore_housing_data_cleaned' name='federated.09odcje1woexo216vzku019cxpsl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='bottom n' datatype='real' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.09odcje1woexo216vzku019cxpsl'>
            <column-instance column='[total_sqft]' derivation='Count' name='[cnt:total_sqft:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_sqft]' derivation='None' name='[none:total_sqft:qk]' pivot='key' type='quantitative' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Total Sqft' datatype='real' name='[total_sqft]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]'>
            <groupfilter count='[Parameters].[Parameter 2]' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([price])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.09odcje1woexo216vzku019cxpsl].[cnt:total_sqft:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.09odcje1woexo216vzku019cxpsl].[cnt:total_sqft:qk]' scope='cols' value='No of houses available' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09odcje1woexo216vzku019cxpsl].[none:total_sqft:qk]' />
              <lod column='[federated.09odcje1woexo216vzku019cxpsl].[none:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='216' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]</rows>
        <cols>[federated.09odcje1woexo216vzku019cxpsl].[cnt:total_sqft:qk]</cols>
      </table>
      <simple-id uuid='{B3DB9139-52DA-4641-844B-7AD83213743B}' />
    </worksheet>
    <worksheet name='count of sqft or houses available in top n locations'>
      <table>
        <view>
          <datasources>
            <datasource caption='banglore_housing_data_cleaned' name='federated.09odcje1woexo216vzku019cxpsl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='top n' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.09odcje1woexo216vzku019cxpsl'>
            <column-instance column='[total_sqft]' derivation='Count' name='[cnt:total_sqft:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_sqft]' derivation='None' name='[none:total_sqft:qk]' pivot='key' type='quantitative' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Total Sqft' datatype='real' name='[total_sqft]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([price])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.09odcje1woexo216vzku019cxpsl].[cnt:total_sqft:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.09odcje1woexo216vzku019cxpsl].[cnt:total_sqft:qk]' scope='cols' value='No of houses available' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09odcje1woexo216vzku019cxpsl].[none:total_sqft:qk]' />
              <lod column='[federated.09odcje1woexo216vzku019cxpsl].[none:price:qk]' />
            </encodings>
            <reference-line axis-column='[federated.09odcje1woexo216vzku019cxpsl].[cnt:total_sqft:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.09odcje1woexo216vzku019cxpsl].[cnt:total_sqft:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='216' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]</rows>
        <cols>[federated.09odcje1woexo216vzku019cxpsl].[cnt:total_sqft:qk]</cols>
      </table>
      <simple-id uuid='{86AF312D-4B68-4F1E-B7AE-CB40BC245207}' />
    </worksheet>
    <worksheet name='dimensions vs (price/sqft)'>
      <table>
        <view>
          <datasources>
            <datasource caption='banglore_housing_data_cleaned' name='federated.09odcje1woexo216vzku019cxpsl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='parameter dimensions' datatype='string' name='[Location Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Bath&quot;'>
              <calculation class='tableau' formula='&quot;Bath&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.09odcje1woexo216vzku019cxpsl'>
            <column caption='choose dimensions' datatype='real' name='[Calculation_633600236435890177]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Location Parameter]&#13;&#10;WHEN &quot;Bath&quot; THEN [bath]&#13;&#10;WHEN &quot;Bhk&quot; THEN [bhk]&#13;&#10;&#13;&#10;END' />
            </column>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price_per_sqft]' derivation='Avg' name='[avg:price_per_sqft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_sqft]' derivation='Avg' name='[avg:total_sqft:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Bath' datatype='real' name='[bath]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Bhk' datatype='integer' name='[bhk]' role='dimension' type='ordinal' />
            <column-instance column='[total_sqft]' derivation='CountD' name='[ctd:total_sqft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_633600236435890177]' derivation='None' name='[none:Calculation_633600236435890177:ok]' pivot='key' type='ordinal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Price Per Sqft' datatype='real' name='[price_per_sqft]' role='measure' type='quantitative' />
            <column caption='Total Sqft' datatype='real' name='[total_sqft]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09odcje1woexo216vzku019cxpsl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09odcje1woexo216vzku019cxpsl].[avg:price:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09odcje1woexo216vzku019cxpsl].[avg:price_per_sqft:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09odcje1woexo216vzku019cxpsl].[avg:total_sqft:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.09odcje1woexo216vzku019cxpsl].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09odcje1woexo216vzku019cxpsl].[:Measure Names]' />
              <lod column='[federated.09odcje1woexo216vzku019cxpsl].[ctd:total_sqft:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.09odcje1woexo216vzku019cxpsl].[Multiple Values]</rows>
        <cols>([federated.09odcje1woexo216vzku019cxpsl].[none:Calculation_633600236435890177:ok] / [federated.09odcje1woexo216vzku019cxpsl].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{72F87C23-EE8A-4A1B-A2D5-DEAF76E7A1DE}' />
    </worksheet>
    <worksheet name='exclude location price per sqft'>
      <table>
        <view>
          <datasources>
            <datasource caption='banglore_housing_data_cleaned' name='federated.09odcje1woexo216vzku019cxpsl' />
          </datasources>
          <datasource-dependencies datasource='federated.09odcje1woexo216vzku019cxpsl'>
            <column aggregation='Attribute' caption='exclude location price per sqft' datatype='real' name='[Calculation_558164942545129473]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{EXCLUDE [location]:AVG([price_per_sqft])}' />
            </column>
            <column-instance column='[Calculation_558164942545129473]' derivation='Attribute' name='[attr:Calculation_558164942545129473:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price_per_sqft]' derivation='Avg' name='[avg:price_per_sqft:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Price Per Sqft' datatype='real' name='[price_per_sqft]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.09odcje1woexo216vzku019cxpsl].[avg:price_per_sqft:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09odcje1woexo216vzku019cxpsl].[attr:Calculation_558164942545129473:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.09odcje1woexo216vzku019cxpsl].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.09odcje1woexo216vzku019cxpsl].[avg:price_per_sqft:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.09odcje1woexo216vzku019cxpsl].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.09odcje1woexo216vzku019cxpsl].[attr:Calculation_558164942545129473:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.09odcje1woexo216vzku019cxpsl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9d9a' />
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.3733149766921997' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]</rows>
        <cols>([federated.09odcje1woexo216vzku019cxpsl].[avg:price_per_sqft:qk] + [federated.09odcje1woexo216vzku019cxpsl].[attr:Calculation_558164942545129473:qk])</cols>
      </table>
      <simple-id uuid='{13BFD4EF-F136-4485-A8C7-667D486898D4}' />
    </worksheet>
    <worksheet name='gannt bar displaying  location vs total sqft bins'>
      <table>
        <view>
          <datasources>
            <datasource caption='banglore_housing_data_cleaned' name='federated.09odcje1woexo216vzku019cxpsl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='top n' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.09odcje1woexo216vzku019cxpsl'>
            <column aggregation='None' datatype='integer' name='[Total Sqft (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='3' formula='[total_sqft]' peg='0' size='1000' />
            </column>
            <column-instance column='[total_sqft]' derivation='Count' name='[cnt:total_sqft:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Total Sqft (bin)]' derivation='None' name='[none:Total Sqft (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Total Sqft' datatype='real' name='[total_sqft]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([price])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.09odcje1woexo216vzku019cxpsl].[none:Total Sqft (bin):qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#cecee5</color>
                <color>#aeaeda</color>
                <color>#9090ce</color>
                <color>#7575c3</color>
                <color>#5c5cb8</color>
                <color>#4545ac</color>
                <color>#3030a1</color>
                <color>#1d1d95</color>
                <color>#0d0d8a</color>
                <color>#00007f</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[federated.09odcje1woexo216vzku019cxpsl].[none:Total Sqft (bin):qk]' />
              <lod column='[federated.09odcje1woexo216vzku019cxpsl].[cnt:total_sqft:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.09odcje1woexo216vzku019cxpsl].[none:Total Sqft (bin):qk]</rows>
        <cols>[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{6C462CF9-C873-43BC-B44C-94A8220E0007}' />
    </worksheet>
    <worksheet name='gannt bar displaying  location vs total sqft bins as cross tab'>
      <table>
        <view>
          <datasources>
            <datasource caption='banglore_housing_data_cleaned' name='federated.09odcje1woexo216vzku019cxpsl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='top n' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.09odcje1woexo216vzku019cxpsl'>
            <column aggregation='None' datatype='integer' name='[Total Sqft (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='3' formula='[total_sqft]' peg='0' size='1000' />
            </column>
            <column-instance column='[total_sqft]' derivation='Count' name='[cnt:total_sqft:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Total Sqft (bin)]' derivation='None' name='[none:Total Sqft (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Total Sqft' datatype='real' name='[total_sqft]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([price])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09odcje1woexo216vzku019cxpsl].[cnt:total_sqft:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.09odcje1woexo216vzku019cxpsl].[none:Total Sqft (bin):ok]</rows>
        <cols>[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{9E2E6D5D-87A1-493A-B5E9-4F2873E3BABB}' />
    </worksheet>
    <worksheet name='location based sqft bin size vs total count'>
      <table>
        <view>
          <datasources>
            <datasource caption='banglore_housing_data_cleaned' name='federated.09odcje1woexo216vzku019cxpsl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='top n' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.09odcje1woexo216vzku019cxpsl'>
            <column aggregation='Attribute' caption='lod count total sqft' datatype='integer' name='[Calculation_228839220150657025]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ EXCLUDE  [location],[price],[total_sqft],[Total Sqft (bin)],[Parameters].[Parameter 1]: COUNT([total_sqft])}' />
            </column>
            <column aggregation='None' datatype='integer' name='[Total Sqft (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='3' formula='[total_sqft]' peg='0' size='1000' />
            </column>
            <column-instance column='[Calculation_228839220150657025]' derivation='Attribute' name='[attr:Calculation_228839220150657025:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price_per_sqft]' derivation='Avg' name='[avg:price_per_sqft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_sqft]' derivation='Avg' name='[avg:total_sqft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_sqft]' derivation='Count' name='[cnt:total_sqft:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Total Sqft (bin)]' derivation='None' name='[none:Total Sqft (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Price Per Sqft' datatype='real' name='[price_per_sqft]' role='measure' type='quantitative' />
            <column caption='Total Sqft' datatype='real' name='[total_sqft]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;7th Phase JP Nagar&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;9th Phase JP Nagar&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Abbigere&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;other&quot;</bucket>
              <bucket>&quot;Whitefield&quot;</bucket>
              <bucket>&quot;Koramangala&quot;</bucket>
              <bucket>&quot;Hebbal&quot;</bucket>
              <bucket>&quot;Kothanur&quot;</bucket>
              <bucket>&quot;Malleshwaram&quot;</bucket>
              <bucket>&quot;Raja Rajeshwari Nagar&quot;</bucket>
              <bucket>&quot;Cunningham Road&quot;</bucket>
              <bucket>&quot;Kundalahalli&quot;</bucket>
              <bucket>&quot;Frazer Town&quot;</bucket>
              <bucket>&quot;Iblur Village&quot;</bucket>
              <bucket>&quot;Doddaballapur&quot;</bucket>
              <bucket>&quot;KR Puram&quot;</bucket>
              <bucket>&quot;Yelahanka&quot;</bucket>
              <bucket>&quot;Sarjapur  Road&quot;</bucket>
              <bucket>&quot;Benson Town&quot;</bucket>
              <bucket>&quot;Indira Nagar&quot;</bucket>
              <bucket>&quot;Kasavanhalli&quot;</bucket>
              <bucket>&quot;Padmanabhanagar&quot;</bucket>
              <bucket>&quot;Giri Nagar&quot;</bucket>
              <bucket>&quot;Thigalarapalya&quot;</bucket>
              <bucket>&quot;Magadi Road&quot;</bucket>
              <bucket>&quot;Electronic City Phase II&quot;</bucket>
              <bucket>&quot;5th Block Hbr Layout&quot;</bucket>
              <bucket>&quot;Judicial Layout&quot;</bucket>
              <bucket>&quot;Hennur Road&quot;</bucket>
              <bucket>&quot;JP Nagar&quot;</bucket>
              <bucket>&quot;Seegehalli&quot;</bucket>
              <bucket>&quot;Basaveshwara Nagar&quot;</bucket>
              <bucket>&quot;Tindlu&quot;</bucket>
              <bucket>&quot;Thubarahalli&quot;</bucket>
              <bucket>&quot;Banashankari Stage VI&quot;</bucket>
              <bucket>&quot;Harlur&quot;</bucket>
              <bucket>&quot;Old Airport Road&quot;</bucket>
              <bucket>&quot;5th Phase JP Nagar&quot;</bucket>
              <bucket>&quot;Marathahalli&quot;</bucket>
              <bucket>&quot;Chikkabanavar&quot;</bucket>
              <bucket>&quot;Kalyan nagar&quot;</bucket>
              <bucket>&quot;Rachenahalli&quot;</bucket>
              <bucket>&quot;Rajaji Nagar&quot;</bucket>
              <bucket>&quot;Thanisandra&quot;</bucket>
              <bucket>&quot;Ramamurthy Nagar&quot;</bucket>
              <bucket>&quot;Kannamangala&quot;</bucket>
              <bucket>&quot;Hosakerehalli&quot;</bucket>
              <bucket>&quot;Hoodi&quot;</bucket>
              <bucket>&quot;Hebbal Kempapura&quot;</bucket>
              <bucket>&quot;Cooke Town&quot;</bucket>
              <bucket>&quot;Yeshwanthpur&quot;</bucket>
              <bucket>&quot;Bellandur&quot;</bucket>
              <bucket>&quot;Gottigere&quot;</bucket>
              <bucket>&quot;Chikka Tirupathi&quot;</bucket>
              <bucket>&quot;8th Phase JP Nagar&quot;</bucket>
              <bucket>&quot;Haralur Road&quot;</bucket>
              <bucket>&quot;Hosur Road&quot;</bucket>
              <bucket>&quot;Sarjapur&quot;</bucket>
              <bucket>&quot;Ambedkar Nagar&quot;</bucket>
              <bucket>&quot;Kumaraswami Layout&quot;</bucket>
              <bucket>&quot;Kengeri&quot;</bucket>
              <bucket>&quot;Sector 7 HSR Layout&quot;</bucket>
              <bucket>&quot;Kodihalli&quot;</bucket>
              <bucket>&quot;Sultan Palaya&quot;</bucket>
              <bucket>&quot;Abbigere&quot;</bucket>
              <bucket>&quot;Mico Layout&quot;</bucket>
              <bucket>&quot;9th Phase JP Nagar&quot;</bucket>
              <bucket>&quot;OMBR Layout&quot;</bucket>
              <bucket>&quot;Ardendale&quot;</bucket>
              <bucket>&quot;Jakkur&quot;</bucket>
              <bucket>&quot;ITPL&quot;</bucket>
              <bucket>&quot;Bommanahalli&quot;</bucket>
              <bucket>&quot;TC Palaya&quot;</bucket>
              <bucket>&quot;Banashankari Stage II&quot;</bucket>
              <bucket>&quot;Hegde Nagar&quot;</bucket>
              <bucket>&quot;6th Phase JP Nagar&quot;</bucket>
              <bucket>&quot;Banashankari Stage III&quot;</bucket>
              <bucket>&quot;Kadugodi&quot;</bucket>
              <bucket>&quot;Channasandra&quot;</bucket>
              <bucket>&quot;Shivaji Nagar&quot;</bucket>
              <bucket>&quot;R.T. Nagar&quot;</bucket>
              <bucket>&quot;Green Glen Layout&quot;</bucket>
              <bucket>&quot;Pai Layout&quot;</bucket>
              <bucket>&quot;Kaikondrahalli&quot;</bucket>
              <bucket>&quot;Begur&quot;</bucket>
              <bucket>&quot;Uttarahalli&quot;</bucket>
              <bucket>&quot;Rayasandra&quot;</bucket>
              <bucket>&quot;Hulimavu&quot;</bucket>
              <bucket>&quot;HSR Layout&quot;</bucket>
              <bucket>&quot;ISRO Layout&quot;</bucket>
              <bucket>&quot;Sanjay nagar&quot;</bucket>
              <bucket>&quot;BTM Layout&quot;</bucket>
              <bucket>&quot;Nagasandra&quot;</bucket>
              <bucket>&quot;Bhoganhalli&quot;</bucket>
              <bucket>&quot;Billekahalli&quot;</bucket>
              <bucket>&quot;Brookefield&quot;</bucket>
              <bucket>&quot;Kammanahalli&quot;</bucket>
              <bucket>&quot;Bommenahalli&quot;</bucket>
              <bucket>&quot;BTM 2nd Stage&quot;</bucket>
              <bucket>&quot;Kodichikkanahalli&quot;</bucket>
              <bucket>&quot;Nehru Nagar&quot;</bucket>
              <bucket>&quot;Shampura&quot;</bucket>
              <bucket>&quot;Dommasandra&quot;</bucket>
              <bucket>&quot;Bannerghatta Road&quot;</bucket>
              <bucket>&quot;Konanakunte&quot;</bucket>
              <bucket>&quot;Old Madras Road&quot;</bucket>
              <bucket>&quot;Amruthahalli&quot;</bucket>
              <bucket>&quot;Sahakara Nagar&quot;</bucket>
              <bucket>&quot;Hennur&quot;</bucket>
              <bucket>&quot;Domlur&quot;</bucket>
              <bucket>&quot;Laggere&quot;</bucket>
              <bucket>&quot;BEML Layout&quot;</bucket>
              <bucket>&quot;7th Phase JP Nagar&quot;</bucket>
              <bucket>&quot;Jigani&quot;</bucket>
              <bucket>&quot;Sarjapura - Attibele Road&quot;</bucket>
              <bucket>&quot;Banashankari&quot;</bucket>
              <bucket>&quot;Kogilu&quot;</bucket>
              <bucket>&quot;Vidyaranyapura&quot;</bucket>
              <bucket>&quot;Horamavu Agara&quot;</bucket>
              <bucket>&quot;Yelachenahalli&quot;</bucket>
              <bucket>&quot;Vijayanagar&quot;</bucket>
              <bucket>&quot;HAL 2nd Stage&quot;</bucket>
              <bucket>&quot;Ramagondanahalli&quot;</bucket>
              <bucket>&quot;Choodasandra&quot;</bucket>
              <bucket>&quot;Kanakpura Road&quot;</bucket>
              <bucket>&quot;Banjara Layout&quot;</bucket>
              <bucket>&quot;Nagarbhavi&quot;</bucket>
              <bucket>&quot;1st Phase JP Nagar&quot;</bucket>
              <bucket>&quot;Hormavu&quot;</bucket>
              <bucket>&quot;Anekal&quot;</bucket>
              <bucket>&quot;Kanakapura&quot;</bucket>
              <bucket>&quot;Kaggadasapura&quot;</bucket>
              <bucket>&quot;Kodigehaali&quot;</bucket>
              <bucket>&quot;Devanahalli&quot;</bucket>
              <bucket>&quot;Jalahalli&quot;</bucket>
              <bucket>&quot;Arekere&quot;</bucket>
              <bucket>&quot;HBR Layout&quot;</bucket>
              <bucket>&quot;Nagavara&quot;</bucket>
              <bucket>&quot;Attibele&quot;</bucket>
              <bucket>&quot;HRBR Layout&quot;</bucket>
              <bucket>&quot;1st Block Jayanagar&quot;</bucket>
              <bucket>&quot;Karuna Nagar&quot;</bucket>
              <bucket>&quot;Sompura&quot;</bucket>
              <bucket>&quot;Yelahanka New Town&quot;</bucket>
              <bucket>&quot;Electronic City&quot;</bucket>
              <bucket>&quot;Neeladri Nagar&quot;</bucket>
              <bucket>&quot;Thyagaraja Nagar&quot;</bucket>
              <bucket>&quot;Kudlu&quot;</bucket>
              <bucket>&quot;Lingadheeranahalli&quot;</bucket>
              <bucket>&quot;Kasturi Nagar&quot;</bucket>
              <bucket>&quot;Sarakki Nagar&quot;</bucket>
              <bucket>&quot;Basavangudi&quot;</bucket>
              <bucket>&quot;NRI Layout&quot;</bucket>
              <bucket>&quot;EPIP Zone&quot;</bucket>
              <bucket>&quot;Talaghattapura&quot;</bucket>
              <bucket>&quot;Narayanapura&quot;</bucket>
              <bucket>&quot;Bannerghatta&quot;</bucket>
              <bucket>&quot;Gubbalala&quot;</bucket>
              <bucket>&quot;Rajiv Nagar&quot;</bucket>
              <bucket>&quot;Somasundara Palya&quot;</bucket>
              <bucket>&quot;Prithvi Layout&quot;</bucket>
              <bucket>&quot;Battarahalli&quot;</bucket>
              <bucket>&quot;Ulsoor&quot;</bucket>
              <bucket>&quot;Dasarahalli&quot;</bucket>
              <bucket>&quot;Gunjur&quot;</bucket>
              <bucket>&quot;Vishveshwarya Layout&quot;</bucket>
              <bucket>&quot;Akshaya Nagar&quot;</bucket>
              <bucket>&quot;Binny Pete&quot;</bucket>
              <bucket>&quot;Mallasandra&quot;</bucket>
              <bucket>&quot;Banashankari Stage V&quot;</bucket>
              <bucket>&quot;Anjanapura&quot;</bucket>
              <bucket>&quot;Tumkur Road&quot;</bucket>
              <bucket>&quot;2nd Phase Judicial Layout&quot;</bucket>
              <bucket>&quot;Gollarapalya Hosahalli&quot;</bucket>
              <bucket>&quot;Subramanyapura&quot;</bucket>
              <bucket>&quot;Begur Road&quot;</bucket>
              <bucket>&quot;Kudlu Gate&quot;</bucket>
              <bucket>&quot;Kalena Agrahara&quot;</bucket>
              <bucket>&quot;Munnekollal&quot;</bucket>
              <bucket>&quot;Pattandur Agrahara&quot;</bucket>
              <bucket>&quot;Sector 2 HSR Layout&quot;</bucket>
              <bucket>&quot;Varthur&quot;</bucket>
              <bucket>&quot;Ambalipura&quot;</bucket>
              <bucket>&quot;Horamavu Banaswadi&quot;</bucket>
              <bucket>&quot;Dodda Nekkundi&quot;</bucket>
              <bucket>&quot;Chamrajpet&quot;</bucket>
              <bucket>&quot;Devarachikkanahalli&quot;</bucket>
              <bucket>&quot;Anandapura&quot;</bucket>
              <bucket>&quot;Poorna Pragna Layout&quot;</bucket>
              <bucket>&quot;Mysore Road&quot;</bucket>
              <bucket>&quot;Chikkalasandra&quot;</bucket>
              <bucket>&quot;Kammasandra&quot;</bucket>
              <bucket>&quot;Hosa Road&quot;</bucket>
              <bucket>&quot;Bommasandra&quot;</bucket>
              <bucket>&quot;Doddathoguru&quot;</bucket>
              <bucket>&quot;Electronics City Phase 1&quot;</bucket>
              <bucket>&quot;Mahadevpura&quot;</bucket>
              <bucket>&quot;Vasanthapura&quot;</bucket>
              <bucket>&quot;Panathur&quot;</bucket>
              <bucket>&quot;Varthur Road&quot;</bucket>
              <bucket>&quot;CV Raman Nagar&quot;</bucket>
              <bucket>&quot;Budigere&quot;</bucket>
              <bucket>&quot;Nagavarapalya&quot;</bucket>
              <bucket>&quot;Kodigehalli&quot;</bucket>
              <bucket>&quot;Sonnenahalli&quot;</bucket>
              <bucket>&quot;Dasanapura&quot;</bucket>
              <bucket>&quot;Kengeri Satellite Town&quot;</bucket>
              <bucket>&quot;Banaswadi&quot;</bucket>
              <bucket>&quot;Kaval Byrasandra&quot;</bucket>
              <bucket>&quot;Kambipura&quot;</bucket>
              <bucket>&quot;Ananth Nagar&quot;</bucket>
              <bucket>&quot;Kenchenahalli&quot;</bucket>
              <bucket>&quot;Kereguddadahalli&quot;</bucket>
              <bucket>&quot;Bisuvanahalli&quot;</bucket>
              <bucket>&quot;Kaggalipura&quot;</bucket>
              <bucket>&quot;Hoskote&quot;</bucket>
              <bucket>&quot;Margondanahalli&quot;</bucket>
              <bucket>&quot;Jalahalli East&quot;</bucket>
              <bucket>&quot;Chandapura&quot;</bucket>
              <bucket>&quot;LB Shastri Nagar&quot;</bucket>
              <bucket>&quot;Balagere&quot;</bucket>
              <bucket>&quot;Badavala Nagar&quot;</bucket>
              <bucket>&quot;Murugeshpalya&quot;</bucket>
              <bucket>&quot;GM Palaya&quot;</bucket>
              <bucket>&quot;Cox Town&quot;</bucket>
              <bucket>&quot;Marsur&quot;</bucket>
              <bucket>&quot;Mahalakshmi Layout&quot;</bucket>
              <bucket>&quot;2nd Stage Nagarbhavi&quot;</bucket>
              <bucket>&quot;Kadubeesanahalli&quot;</bucket>
              <bucket>&quot;Bharathi Nagar&quot;</bucket>
              <bucket>&quot;Kathriguppe&quot;</bucket>
              <bucket>&quot;Singasandra&quot;</bucket>
              <bucket>&quot;Vittasandra&quot;</bucket>
              <bucket>&quot;Yelenahalli&quot;</bucket>
              <bucket>&quot;Babusapalaya&quot;</bucket>
              <bucket>&quot;Malleshpalya&quot;</bucket>
              <bucket>&quot;Lakshminarayana Pura&quot;</bucket>
              <bucket>&quot;Kothannur&quot;</bucket>
              <bucket>&quot;Garudachar Palya&quot;</bucket>
              <bucket>&quot;Parappana Agrahara&quot;</bucket>
              <bucket>&quot;Bommasandra Industrial Area&quot;</bucket>
              <bucket>&quot;AECS Layout&quot;</bucket>
              <bucket>&quot;NGR Layout&quot;</bucket>
              <bucket>&quot;Doddakallasandra&quot;</bucket>
              <bucket>&quot;Vishwapriya Layout&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09odcje1woexo216vzku019cxpsl].[attr:Calculation_228839220150657025:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09odcje1woexo216vzku019cxpsl].[none:Total Sqft (bin):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.09odcje1woexo216vzku019cxpsl].[avg:total_sqft:qk]' />
              <lod column='[federated.09odcje1woexo216vzku019cxpsl].[avg:price:qk]' />
              <lod column='[federated.09odcje1woexo216vzku019cxpsl].[avg:price_per_sqft:qk]' />
              <lod column='[federated.09odcje1woexo216vzku019cxpsl].[cnt:total_sqft:qk]' />
              <color column='[federated.09odcje1woexo216vzku019cxpsl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
                <format attr='size' value='0.86756908893585205' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09odcje1woexo216vzku019cxpsl].[attr:Calculation_228839220150657025:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-color' value='#edc948' />
                <format attr='size' value='1.3183425664901733' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.09odcje1woexo216vzku019cxpsl].[none:Total Sqft (bin):qk] + [federated.09odcje1woexo216vzku019cxpsl].[attr:Calculation_228839220150657025:qk])</rows>
        <cols>[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{0CA10834-556C-41BB-908C-F046E44BB3D5}' />
    </worksheet>
    <worksheet name='scatter plot on price/sqft on locations'>
      <table>
        <view>
          <datasources>
            <datasource caption='banglore_housing_data_cleaned' name='federated.09odcje1woexo216vzku019cxpsl' />
          </datasources>
          <datasource-dependencies datasource='federated.09odcje1woexo216vzku019cxpsl'>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_sqft]' derivation='Avg' name='[avg:total_sqft:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Total Sqft' datatype='real' name='[total_sqft]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]'>
            <groupfilter count='30' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([price])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='power' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9450275897979736' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09odcje1woexo216vzku019cxpsl].[avg:price:qk]</rows>
        <cols>[federated.09odcje1woexo216vzku019cxpsl].[avg:total_sqft:qk]</cols>
      </table>
      <simple-id uuid='{75CCAAC4-080B-41C1-A070-E47CC301F71E}' />
    </worksheet>
    <worksheet name='scatterplot of sqft vs price'>
      <table>
        <view>
          <datasources>
            <datasource caption='banglore_housing_data_cleaned' name='federated.09odcje1woexo216vzku019cxpsl' />
          </datasources>
          <datasource-dependencies datasource='federated.09odcje1woexo216vzku019cxpsl'>
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_sqft]' derivation='None' name='[none:total_sqft:qk]' pivot='key' type='quantitative' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Total Sqft' datatype='real' name='[total_sqft]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09odcje1woexo216vzku019cxpsl].[none:total_sqft:qk]' field-type='quantitative' max='15000.0' min='132.77027027027029' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <reference-line axis-column='[federated.09odcje1woexo216vzku019cxpsl].[none:total_sqft:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.09odcje1woexo216vzku019cxpsl].[none:total_sqft:qk]' z-order='1' />
            <reference-line axis-column='[federated.09odcje1woexo216vzku019cxpsl].[none:price:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.09odcje1woexo216vzku019cxpsl].[none:price:qk]' z-order='2' />
            <reference-line axis-column='[federated.09odcje1woexo216vzku019cxpsl].[none:total_sqft:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.09odcje1woexo216vzku019cxpsl].[none:total_sqft:qk]' z-order='3' />
            <reference-line axis-column='[federated.09odcje1woexo216vzku019cxpsl].[none:price:qk]' enable-instant-analytics='true' formula='average' id='refline3' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.09odcje1woexo216vzku019cxpsl].[none:price:qk]' z-order='4' />
            <reference-line axis-column='[federated.09odcje1woexo216vzku019cxpsl].[none:total_sqft:qk]' enable-instant-analytics='true' formula='average' id='refline4' label-type='none' probability='95' scope='per-cell' value-column='[federated.09odcje1woexo216vzku019cxpsl].[none:total_sqft:qk]' z-order='5' />
            <reference-line axis-column='[federated.09odcje1woexo216vzku019cxpsl].[none:price:qk]' enable-instant-analytics='true' formula='average' id='refline5' label-type='none' probability='95' scope='per-cell' value-column='[federated.09odcje1woexo216vzku019cxpsl].[none:price:qk]' z-order='6' />
          </pane>
        </panes>
        <rows>[federated.09odcje1woexo216vzku019cxpsl].[none:price:qk]</rows>
        <cols>[federated.09odcje1woexo216vzku019cxpsl].[none:total_sqft:qk]</cols>
      </table>
      <simple-id uuid='{3C9DBCE5-331C-41B8-96A1-7BA4623A7E4B}' />
    </worksheet>
    <worksheet name='scatterplot of sqftand bhk vs price '>
      <table>
        <view>
          <datasources>
            <datasource caption='banglore_housing_data_cleaned' name='federated.09odcje1woexo216vzku019cxpsl' />
          </datasources>
          <datasource-dependencies datasource='federated.09odcje1woexo216vzku019cxpsl'>
            <column aggregation='Sum' caption='Bhk' datatype='integer' name='[bhk]' role='dimension' type='ordinal' />
            <column-instance column='[bhk]' derivation='None' name='[none:bhk:ok]' pivot='key' type='ordinal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_sqft]' derivation='None' name='[none:total_sqft:qk]' pivot='key' type='quantitative' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Total Sqft' datatype='real' name='[total_sqft]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09odcje1woexo216vzku019cxpsl].[none:bhk:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:bhk:ok]' member='1' />
              <groupfilter function='member' level='[none:bhk:ok]' member='2' />
              <groupfilter function='member' level='[none:bhk:ok]' member='3' />
              <groupfilter function='member' level='[none:bhk:ok]' member='4' />
              <groupfilter function='member' level='[none:bhk:ok]' member='5' />
              <groupfilter function='member' level='[none:bhk:ok]' member='6' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.09odcje1woexo216vzku019cxpsl].[none:bhk:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.80160218477249146' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09odcje1woexo216vzku019cxpsl].[none:price:qk]</rows>
        <cols>([federated.09odcje1woexo216vzku019cxpsl].[none:bhk:ok] * [federated.09odcje1woexo216vzku019cxpsl].[none:total_sqft:qk])</cols>
      </table>
      <simple-id uuid='{D1CCBBFA-1413-4DF4-8D2F-B53922BC62E0}' />
    </worksheet>
    <worksheet name='sqft bins details'>
      <table>
        <view>
          <datasources>
            <datasource caption='banglore_housing_data_cleaned' name='federated.09odcje1woexo216vzku019cxpsl' />
          </datasources>
          <datasource-dependencies datasource='federated.09odcje1woexo216vzku019cxpsl'>
            <column aggregation='None' datatype='integer' name='[Total Sqft (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='3' formula='[total_sqft]' peg='0' size='1000' />
            </column>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price_per_sqft]' derivation='Avg' name='[avg:price_per_sqft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_sqft]' derivation='Avg' name='[avg:total_sqft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_sqft]' derivation='Count' name='[cnt:total_sqft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Sqft (bin)]' derivation='None' name='[none:Total Sqft (bin):qk]' pivot='key' type='quantitative' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Price Per Sqft' datatype='real' name='[price_per_sqft]' role='measure' type='quantitative' />
            <column caption='Total Sqft' datatype='real' name='[total_sqft]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <lod column='[federated.09odcje1woexo216vzku019cxpsl].[cnt:total_sqft:qk]' />
              <lod column='[federated.09odcje1woexo216vzku019cxpsl].[avg:price:qk]' />
              <lod column='[federated.09odcje1woexo216vzku019cxpsl].[avg:price_per_sqft:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.09odcje1woexo216vzku019cxpsl].[avg:total_sqft:qk]</rows>
        <cols>[federated.09odcje1woexo216vzku019cxpsl].[none:Total Sqft (bin):qk]</cols>
      </table>
      <simple-id uuid='{5566EAA1-EAE4-4AAB-A456-B95A888651D9}' />
    </worksheet>
    <worksheet name='sqft bins with count lod'>
      <table>
        <view>
          <datasources>
            <datasource caption='banglore_housing_data_cleaned' name='federated.09odcje1woexo216vzku019cxpsl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='top n' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.09odcje1woexo216vzku019cxpsl'>
            <column aggregation='Attribute' caption='lod count total sqft' datatype='integer' name='[Calculation_228839220150657025]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ EXCLUDE  [location],[price],[total_sqft],[Total Sqft (bin)],[Parameters].[Parameter 1]: COUNT([total_sqft])}' />
            </column>
            <column aggregation='None' datatype='integer' name='[Total Sqft (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='3' formula='[total_sqft]' peg='0' size='1000' />
            </column>
            <column-instance column='[Calculation_228839220150657025]' derivation='Attribute' name='[attr:Calculation_228839220150657025:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price_per_sqft]' derivation='Avg' name='[avg:price_per_sqft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_sqft]' derivation='Avg' name='[avg:total_sqft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_sqft]' derivation='Count' name='[cnt:total_sqft:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Total Sqft (bin)]' derivation='None' name='[none:Total Sqft (bin):qk]' pivot='key' type='quantitative' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Price Per Sqft' datatype='real' name='[price_per_sqft]' role='measure' type='quantitative' />
            <column caption='Total Sqft' datatype='real' name='[total_sqft]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09odcje1woexo216vzku019cxpsl].[attr:Calculation_228839220150657025:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <lod column='[federated.09odcje1woexo216vzku019cxpsl].[avg:price:qk]' />
              <lod column='[federated.09odcje1woexo216vzku019cxpsl].[avg:price_per_sqft:qk]' />
              <color column='[federated.09odcje1woexo216vzku019cxpsl].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09odcje1woexo216vzku019cxpsl].[avg:total_sqft:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <lod column='[federated.09odcje1woexo216vzku019cxpsl].[cnt:total_sqft:qk]' />
              <lod column='[federated.09odcje1woexo216vzku019cxpsl].[avg:price:qk]' />
              <lod column='[federated.09odcje1woexo216vzku019cxpsl].[avg:price_per_sqft:qk]' />
              <color column='[federated.09odcje1woexo216vzku019cxpsl].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09odcje1woexo216vzku019cxpsl].[attr:Calculation_228839220150657025:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.09odcje1woexo216vzku019cxpsl].[avg:price:qk]' />
              <lod column='[federated.09odcje1woexo216vzku019cxpsl].[avg:price_per_sqft:qk]' />
              <color column='[federated.09odcje1woexo216vzku019cxpsl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.09odcje1woexo216vzku019cxpsl].[avg:total_sqft:qk] + [federated.09odcje1woexo216vzku019cxpsl].[attr:Calculation_228839220150657025:qk])</rows>
        <cols>[federated.09odcje1woexo216vzku019cxpsl].[none:Total Sqft (bin):qk]</cols>
      </table>
      <simple-id uuid='{43F1F432-DBD1-413A-9303-543A2FD849FC}' />
    </worksheet>
    <worksheet name='top n locations'>
      <table>
        <view>
          <datasources>
            <datasource caption='banglore_housing_data_cleaned' name='federated.09odcje1woexo216vzku019cxpsl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='top n' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.09odcje1woexo216vzku019cxpsl'>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([price])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.09odcje1woexo216vzku019cxpsl].[avg:price:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.09odcje1woexo216vzku019cxpsl].[avg:price:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]</rows>
        <cols>[federated.09odcje1woexo216vzku019cxpsl].[avg:price:qk]</cols>
      </table>
      <simple-id uuid='{AFB73446-F841-44E2-B439-356081DEC1EB}' />
    </worksheet>
    <worksheet name='treemap on area type'>
      <table>
        <view>
          <datasources>
            <datasource caption='banglore_housing_data_cleaned' name='federated.09odcje1woexo216vzku019cxpsl' />
          </datasources>
          <datasource-dependencies datasource='federated.09odcje1woexo216vzku019cxpsl'>
            <column caption='Area Type' datatype='string' name='[area_type]' role='dimension' type='nominal' />
            <column-instance column='[price_per_sqft]' derivation='Avg' name='[avg:price_per_sqft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='CountD' name='[ctd:location:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_sqft]' derivation='CountD' name='[ctd:total_sqft:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[area_type]' derivation='None' name='[none:area_type:nk]' pivot='key' type='nominal' />
            <column caption='Price Per Sqft' datatype='real' name='[price_per_sqft]' role='measure' type='quantitative' />
            <column caption='Total Sqft' datatype='real' name='[total_sqft]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09odcje1woexo216vzku019cxpsl].[none:area_type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:area_type:nk]' />
              <groupfilter function='member' level='[none:area_type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.09odcje1woexo216vzku019cxpsl].[none:area_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.09odcje1woexo216vzku019cxpsl].[avg:price_per_sqft:qk]' />
              <color column='[federated.09odcje1woexo216vzku019cxpsl].[avg:price_per_sqft:qk]' />
              <lod column='[federated.09odcje1woexo216vzku019cxpsl].[ctd:total_sqft:qk]' />
              <lod column='[federated.09odcje1woexo216vzku019cxpsl].[ctd:location:qk]' />
              <text column='[federated.09odcje1woexo216vzku019cxpsl].[none:area_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B9DEEBBA-20E3-40DF-B1D8-ED4DAB473807}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='count of distinct sqft and location'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]</field>
            <field>[federated.0h4fz2c094s3wk1b9ugve1kjo138].[none:area_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7CD3E1CF-C81A-44F1-B173-291C41985E2B}' />
    </window>
    <window class='worksheet' name='exclude location price per sqft'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.09odcje1woexo216vzku019cxpsl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DF596F05-C0AA-479A-A6EB-65229C9DA393}' />
    </window>
    <window class='worksheet' name='treemap on area type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09odcje1woexo216vzku019cxpsl].[avg:price_per_sqft:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[none:area_type:nk]</field>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BECC9B75-57F4-4A9C-B6F0-15B8B22A49D3}' />
    </window>
    <window class='worksheet' name='sqft bins details'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[none:Total Sqft (bin):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2423917D-F0B4-4FA5-B758-076DBD525046}' />
    </window>
    <window class='worksheet' name='sqft bins with count lod'>
      <cards>
        <edge name='left'>
          <strip size='156'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.09odcje1woexo216vzku019cxpsl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[none:Total Sqft (bin):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A8D17DA7-4454-4498-A7FB-1B8204D22EF0}' />
    </window>
    <window class='worksheet' name='location based sqft bin size vs total count'>
      <cards>
        <edge name='left'>
          <strip size='156'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='1' param='[federated.09odcje1woexo216vzku019cxpsl].[avg:total_sqft:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[none:Total Sqft (bin):qk]</field>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{158E84A1-6FA0-439F-B7A8-7E86AF655164}' />
    </window>
    <window class='worksheet' name='dimensions vs (price/sqft)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Location Parameter]' type='parameter' />
            <card pane-specification-id='0' param='[federated.09odcje1woexo216vzku019cxpsl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[:Measure Names]</field>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[none:Calculation_633600236435890177:ok]</field>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[none:bhk:ok]</field>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{470AC9BF-8E55-41EC-92F1-90166E584AEB}' />
    </window>
    <window class='worksheet' name='bhk/bath vs price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.09odcje1woexo216vzku019cxpsl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Location Parameter]</field>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[none:bath:ok]</field>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[none:bhk:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{54840394-F955-4ABF-9334-DE6515927E9B}' />
    </window>
    <window class='worksheet' name='scatter plot on price/sqft on locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[none:Total Sqft (bin):qk]</field>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{12B3D7C0-A651-40EA-BEA9-B769F96EEB12}' />
    </window>
    <window class='worksheet' name='top n locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[avg:price:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CCE48B4D-E5CB-4DE4-A68E-8782CB5D7B0F}' />
    </window>
    <window class='worksheet' name='cheapest ocations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[avg:price:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A741CEB-83F8-4B3B-B1FE-E0D623CECA59}' />
    </window>
    <window class='worksheet' name='gannt bar displaying  location vs total sqft bins'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.09odcje1woexo216vzku019cxpsl].[none:Total Sqft (bin):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[none:Total Sqft (bin):qk]</field>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AD71BEAF-8DD9-4ACC-AD32-AA4F9A77AAE8}' />
    </window>
    <window class='worksheet' name='gannt bar displaying  location vs total sqft bins as cross tab'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7AE6DC6D-30D3-4843-B799-0D16F00E4DF3}' />
    </window>
    <window class='worksheet' name='count of sqft or houses available in top n locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09odcje1woexo216vzku019cxpsl].[none:total_sqft:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[none:Total Sqft (bin):qk]</field>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[none:total_sqft:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B35D5678-C6B7-4ED4-8A10-2135F27F7D8E}' />
    </window>
    <window class='worksheet' name='count of sqft or houses available in bottom n locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09odcje1woexo216vzku019cxpsl].[none:total_sqft:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[none:Total Sqft (bin):qk]</field>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[none:total_sqft:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{55D385D5-018B-4310-8DCF-8F2047D77BA0}' />
    </window>
    <window class='worksheet' name='scatterplot of sqft vs price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FE3118C6-4347-45FA-8B09-EF1EFBA72497}' />
    </window>
    <window class='worksheet' maximized='true' name='scatterplot of sqftand bhk vs price '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09odcje1woexo216vzku019cxpsl].[none:bhk:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{174AB65F-2C71-4D7E-907B-E81F272A9EEE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='bhk/bath vs price' width='192'>
      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
    </thumbnail>
    <thumbnail height='179' name='cheapest ocations' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='64' name='count of distinct sqft and location' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='179' name='count of sqft or houses available in bottom n locations' width='192'>
      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
      vdra2k4bWwIguj25BBKik0gAhKZJAISmSQCEpsnvAYSmyRlAaJoEQGiaBEBomgRAaJoEQGia
      3AohbhA1FG1ZzYodhe7KuofTmZ7o/pqa9pAzgLghOGzv8faJn/HCsixWvfQ4QV9ksbWs/eNK
      AMQNwIF1XwWjJyUQ6AWK/91MSI4k9+uSdo8sARA3gPOcJ5KI3leWKIOiMVScq/+epbaTAIgb
      gJMfb9Gha7xIUVDsZyhv58gSAHED8KbnxTrqGi9SVVRDYLu/g04CIG4Ad3AHhRSfu7JEPXoE
      u763fAoktMCH2AQ9e99zfxueeuFfbNlcyLC49n8Jp9wNKm4QTX8PED95Likj9O0+A0gAhKbJ
      JZDQNAmA0DQJgNA0CYDQNAmA0DQJgNA0CYDQNAmA0DQJgNA0CYDQNAmA0DQJgNA0CYDQNAmA
      0DQJgNA0CYDQNAmA0DQJgNA0CYDQNAmA0DQJgNA0CYDQNAmA0DQJgNA0CYDQNAmA0DQJgNA0
      CYDQNAmA0DQJgNC0/wctj0YZdUoUVwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='179' name='count of sqft or houses available in top n locations' width='192'>
      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
      MSXFJU8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='dimensions vs (price/sqft)' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='exclude location price per sqft' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='gannt bar displaying  location vs total sqft bins' width='192'>
      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
      ugAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='184' name='gannt bar displaying  location vs total sqft bins as cross tab' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='location based sqft bin size vs total count' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='scatter plot on price/sqft on locations' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='scatterplot of sqft vs price' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29Z2Ad13Xv+5s5veKgdxAgCgvYwU6KlETK6s2ybMsldpLrOE6cevOc3Lzk
      PX94N+UmN7mOkzhxnNhxkS3Z6lJkNVIUO8AGgkQlej04AE5vM2dm3ocDQOwECICUiPl9AXBw
      Zvaemf2fvffaa68laJqmoaOzSBFvdwV0dG4nugB0FjW3TQCKosz7OVVVRVXVWR3zgx/8YNZl
      LETdLyaVSi3o+afKWOjR70Jfh6Zpcy7jtglgtg11JmiaNuuH2traelPlLCQLcW8u51ZM/W7F
      dcy1DH0IpLOo0QWgs6jRBaCzqNEFoLOo0QWgs6jRBaCzqNEFoLOo0QWgs6jRBaCzqNEFoLOo
      0QWgs6jRBaCzqNEFoLOo0QWgs6jRBaCzqNEFoLOo0QWgs6jRBaCzqNEFoLOombMAgmNDtLR3
      ISkqQd8QF3qH0YDQ2BCdvUOoGgRGB+jqH0HVIxDpfMQwzu3wFOP+GG4xQmv3CImJQTItKbpM
      RnyDo2TZFPoGFIYGx3GbZLwuN4Ue+/zUXEdnHpijAIyUlOTR2ZmkoMhIUCimosxAU/0wWUuK
      KHMa6e1pwl26kWqzj564RJ7LMh2+RJKk+bmKSaaiQswmbImiKLOqx1QZCxnxYLZ1utkyFjoy
      xK26jrmUMUcBKHR29lFeswKTGqO/t5fgYAprYS6BcT8eRcPgKsTvG8Zni2PPzcFgMGAwGJBl
      GZPJNLfiL6/NZMM3GAwzPsZgMGA2m2f8/SnxGo1zvHXXQZKkWdXpZpBlGaPRiCAIC1bGQl/H
      lIDnUsYc5wAy0Ylxjh85yEBQpSTLRFfYwfKKIso90BcUqVhazRK3xKjioCjTMbfidHTmmTm+
      xqxs3LX7or8zyJ/8LW/JMvImfy9cupLCuRWko7Mg6GZQnUWNLgCdRY0uAJ1FjS4AnUWNLgCd
      RY0uAJ1FjS4AnUWNLgCdRY0uAJ1FjS4AnUWNLgCdRY0uAJ1FjS4AnUWNLgCdRY0uAJ1FjS4A
      nUWNLgCdRY0uAJ1FjS4AnUWNLgCdRY0uAJ1FjS4AnUWNLgCdRY0uAJ1FjS4AnUWNLgCdRY0u
      AJ1FjS4AnUXNnAUwMdLDhf5R0BTaGxs4cOADxiIyQ53NHD91HklV6W8/S0NjK7KeIkbnI8ac
      BaCoKslEAk2RiRvd7N69iywxxFDMTGWumb6uNoYSLortCsP+yHzUWUdn3phzlofcvHzGuscB
      ESk4xL73BqisqsGd6cbpNDA+fg5H7kayzD56JQVFUfQMMfNcp5stQ88QM2cBqHiHBhn1BsjN
      cZGVU4wnFSQmQXC8l4RFw5NfzVh3M81GheIV+XqGmBmgZ4iZGfORIWbOT1HFTFlxLoJoJivT
      RVjKoLIon3iujUBCoDA/m0ybkbBsJNdlm2txOjrzyhwFIFJYVn7R3w4yp37z5DCVEMmVmYdr
      bgXp6CwIuhlUZ1GjC0BnUaMLQGdRowtAZ1GjC0BnUaMLQGdRowtAZ1GjC0BnUaMLQGdRowtA
      Z1GzcB5dOjpXIe1NCwggwII6480EXQA6twxFVXnvZDcfNPZiMhp48q7lrKnMv6110gWgc8to
      7vFxrmuUP/j0NuJJmX999QSleW4yb6OXsC4AnVtGe/8Ea6ryyXbbABuF2S4GfKHbKgB9Eqxz
      y1hZnsOJ1iGGx8NcGJhgaCzMknzPba2T3gPo3DKWleawa22C7756EovZyJcfWIfbYbmtddIF
      oHPLEEWB7atK2b6q9HZXZZoZCCDFS9//DtnL6kgJ2dy7bdnC10pH5xYxAwFECQRSSN09GDJv
      b3elozPfzEAAGdz78L109vtZtal24Wuko3MLmYEVaIIzTQHuuWsZxz5oWvga6ejcQmYgADdW
      +nnu+XcoqPnoTF50dOaDGwggQePJ04QCccaCYSLB8K2plY7OLeIGcwAra+s2oKoaD65eh9Wk
      W0117ixmMARK0t9ynpdefJETzX0LXyMdnVvIdV/pqhzn8P73UHOW8MSe3bgsM4+5qaPzceC6
      PcBEfzthYyHL8+HM+cFbVScdnVvGdXsATVTpOHmYLrNMKHaGlPoo92ysvlV109FZcK4rgNzy
      9fze/7X+uifobTtNUMxhdWURrWdPMBJS2bJ9M33nTuKNqGzYVEdfUwM+ycyWTeuxmfRhlM5H
      hzmbdfKLy4gOR5GTERRLDltXQ0dzN5qjkPVFAt7OsyTcVay1BhkJRCnP+TBO9HwnaJg632zO
      O5XwYrbfX+jkErfi/AtdxlQ5C33uuZQxZwFYrVYEomiaisloxmQTScX82DKcGE0GFCmOyWnF
      Yo4iK+nkElMZVlKp1FyLv4SprC2zbdCzqcdCZ4eBdKKPhd4rq6rqrDLp3Ay36jrm0o7mKIAU
      Z44fpW0ojNG8Ff9QG/u6FNZt30nXqeMcljXW1G2k49RxPlCNbNlePJ29RdO0j0SGGFEUZ1WP
      W5EhZiHuzdVY6AwxC30dU73YXMqY41M0sHb7HtZO/lVVVpD+RRDI3XXP5KcCeffunf5dR+ej
      xBwFIHDNF8gl/9Abvs5HE31PsM6iRheAzqIlEEnoAlgMqJpG15Cfg429jIdi3ALr58eCzsEJ
      XQB3Opqm8Vb9BZ7bd55+X4i/e+4ovd7A7a7WR4LyQo8eFeJOJ5qQOXZ+kD/67DZcdgvNPT5e
      PtjKbz9Rd7urdtvJdtv1HuCO57Lhzm2ORfuRQ+8B7nAcNhNbVhbzTy81UF7goal7lK88suF2
      V+sjgy6AOxxBENi0vIjjzQO8faKLHatKKMl1o6npVXNFUXn7RBdHz/WT4bTy+ftWU5DlvM21
      vnXoQ6A7HDml8J+/bOSBLVX8zW/uxWgQebuhc/r/R84P0D3s53ee2sL9myv511dPEk/Kt7HG
      MyOakLgwOEE4Ls3pPLoA7mA0DUYDUfpHQ3icNjJdNvZurORU+/D0d852etm1dgm5Hjsry3Mx
      GUXGQ/HbWOsbMzgW4q+fPcxrR9r5u+eP09Lru2mPUH0IdAczOBbiX145gapp/N3zR7l/UyWK
      qmIyGvjpe+epKMqkqjiL482DlOS6GQ/GSMoKWbcxXPlMeG7feT577ypWLMmhZ3iCH71zjv/7
      i3dhuIkZvi6AO5g3jnbw5F3LKcpx8cO3zvLCgWaKc9247BbKCzJo7RvDajLidpj5X88exmEz
      82sPrsNuXXhP1LkQjiYncwyAy24hKSk3vbinC+AORtM0BEGgMNvF7z61mb9+9jDRhMyvPbSO
      gkw7G5cX89fPHuGPPruNp3av/Ejk7JoJe+qW8qO3z3LXmjIaWgbYtLwIgygwHopz7PwAVrOR
      rSuLcdjMNzyXLoA7mIe3VfPd107R3j/OgC/E2qoCBn0h+rwhJkIxrGYTggBGg4h4Gxq+pmkM
      joUJx5JUl2RjNMxsSrp9VSl2q4mznV7WVhWwrbaMQCTBP71Yz7rqAnyBKP/8cgN/8OltNzyn
      LoA7mJLcDP7g6a00dXlZX11AdUk2rX1j/M8ffYCiaJhNBh7cUoXVfOubgaZpvHyojXNdo2Q4
      LLxyuI3ffmITLvuNI5CLosCGmkLWVxcgyzJGo8jx5kHWVObz6PYaAP7xxXra+8dZWZ573XPp
      AriDEQTIctvYva58+rN9p7r53ae24LKZMJtN/OjtsySkFDbLrR33D09EONvpTU9eRYFXDrVx
      oLGXR7bV3NT57FYTY8EYkHb+iyZlbJYbN29dAB9jNA2ScoqznV5sFhMrluTcsMuPxCXys5wU
      ZztIpjTQQFGvPYPUNA05pSKKwoyHKDMhkUxhsxgxiOmhl8dpxeuP3PT5Ni4v4kTbEN/6xXES
      UorCbCdLCm6cf0wXwMeYcCzJt1+spzDbSTQucbipj688ugGDeO2G+sj2Gn74ViPbVhbTMehn
      1dI8HNew+kiyws/fb6al14fVbOSZvaupLMqcl7ovyc/Aajby0/fOkeuxc+hsH199bONNn89u
      MfG7T23hwsAEFrOBJQWeGc1rdAF8jDnWPMCysmye2rUCTYP//fxReoYDVBZnXfOY2vJczCYD
      p9uGqKspZENN0TUtP++f6UFVVf74czsYD8X5/ptn+MYz23FYL7WueP0RBn1hakqzcc7A8gJg
      MIh85ZENHDk3QDCS4GtPbCI/c24uGEaDyPIlObM7Zk4l6txWNI1L3nLC5GfXQxAEakqyqch3
      3zAqRFv/OHs2VOCyW3BYzViMBoKR5LQANE3j4Nk+3jvZRUleBj9//zy/9cRmSvPcM6q/zWJi
      T13FjL57Maqmcez8AG/VXwDgke3L2Lis8KZMuLoAPiYkpRSdQ36y3LZpZ7WtK4v59ov1RBMy
      4VgSVdOoKJq/vLsbqgt472QX2Rk2Bn1hVE0jy/3hKnFCSvH60XY+tXslG2oKaesb44UDzfz+
      01sZ9UcZGQ9RU5Y7IytTLCHTPRIgP9NBTob9ut8dGA2x71Q3v/n4RiRJ5j/ebKQsz03+TTjx
      Gb75zW9+c9ZHzQOqqs4qfs9MmPIHEa8zBr6cd999l7179974ixeVoWnarMqYLYqiXHJvJkJx
      /v75YwyPh/mgsQ9N0ygv8GAxm1halMnP3jtHhsNCMJpEFEXKCzJu+DZUVRVRFK/7vZJcN5GE
      xIsHWhgLxvjVh9ZP5/XVNI2XDrZyonWIaEKmvmWQyuIsWvvGUFSN5/edwzsR4Z2T3axZmnfd
      1eVRf5S/fe4IY4EY+051Y7OYKM51XbNuJ9uGcdjMbF5RjN1iZHgibf0pzcu47jVfDb0H+Bjw
      +tF27l5fzq61S4gnZf7ix4dYX11ApsvGvlNdPLNnFTvXlBFLyPzVT9L/8zitcy5XFAX21i1l
      b93SK/436AvT1jfOp+5eSfewn4lwgn955QRfemAtrx9t5xvP7MBsgJMdXl4+1MavP3ztGLPP
      7z/Pp+5eybqqAiZCcb71wnHWVOVjv4Zptro0i++/eYZtYyUkJZmO/nHu31R5U9eoC+A2o6oa
      757s4uj5AYpzXDx9Ty02k5AO2aikQzBG4tJ0gzYZDZiMInIq/b9wTMJoFDlyrp9stw2jQURO
      3XzIw4vLNRqu3UPEkjJOm4lHttfQ0uvjtSPt7FxTRmVRJgZRxGw0gKbgcdqI3MBl+eLrs5iN
      adOscu3wkyW5bh7cUsX33jiNgMaTu1aQ67n+sOla6AK4zRxo7OHC4ARffayO9v5x/u21k3zt
      sQ3Ut/bzzokuNDTK8jJ4YXIY0usNUpLrnh4nb6gp5G9/doSCLBf+cJzqkqyb9ubUNI0j5/p5
      u6ELTdO4e305d68rRxSvFMHSokw0DV440EKmy4okK9y7oYJMl42lhR5+9HYjZblujjQP8Mye
      1dct95HtNfzwl43ctXYJbX1j1FbkXtealN7kU8zGZUXIsozZPDPL0+WoqqoLYCFISila+sbI
      dttuOC6tbxnis/fWUpDlJMtl4/3TPXQMTvDeqS6+/slNCILAd189yT3ry/EFY1QWZbJ1Zcl0
      ozzb6SXDYSXDYUFKpUhIKYLR5CWT1Zni9Ud5u6GL335yEwZR4Luvn2JJfsZVzapGg8hXH6/j
      yLl+IjGJrz2xkTyPA0GAz+5ZRX3LIP2jQb74ibVUFF5/7aC2PBez0cCZCyOsry5gQ83NWXRm
      QjKZZHh4mJGREYaGhnQBzDdjwRjf+sUxbGYToViS7atKeXR7zTUfaHVJFqfah8nx2BkeiyCK
      AuOhBJVFWeR6HADUlGajahpP373ykmMjcYnGTi9feWQDm1cWs+9UNz95p+nyffCXIMkKz+0/
      T3P3KPlZTj63dzV5melyekYCLC3KnP57WWk2XcP+a64rOKxm7tt45djbZDSwY3UZkiTN6O0s
      CAI1pdnUlGbf8LszZSrqdzQaJRgM0tfXx/j4OJFIhIyMDPLz89myZYsugNmgaXD6wggHG3sp
      yc3goW3VV0zU3qrvZCwYpzDLgCgI/NexDrbVlk6PUb0TEX7+fjPBaJKHt1Xz0NZqvvn993n3
      ZDcJKcUffXYbmU4L+0/30DXkRxQFmrpH+eqjV4YxSSRTWEwGXjvSRq83SOfQBFXFWWS6rj0B
      fuNYB2ajyB9+egvdI0F++FYjv/epLZiMBmpKs3ntcDuHm/o4c8HLue5RfueTm+kfDfLL4xcQ
      RZGHtlZRkOX6SEaXUFWVSCSC1+vF6/UyMjJCMpkkMzOTvLw8NmzYQHZ2Nna7ffqFNH8CUGUO
      v7+flMFK7fo6es6eIJBQWLt5M52njhNMGdm6YzsZto/2ZovrcbpjmHcaOnlkWw093iDfe/0U
      v/XEpkt8ZMaCMTYuK+TJXStISim+8Z13iSUkwE40IfG3PzvKzjWlrHXb+dFbZ1lXXUC2286X
      HlhHe/8Y+0/38KsPrOHz963m+f3nUTWNT+1eQWH2lTZuj8tKdUk2NosR3+TWx994tO6SxTFF
      VYknUphMIhaTkaYuL195pA6P08LqpVbeOHqBuJTCZDSQ6bRy36alfO+N05Tlubl3Qzk/fvss
      RoPIYzuWkVJV/vnlBv74cztnvOJ7PTRNIykrpBQVu9U0Xe+UohJPyljNRkzGq5vKp97woVAI
      v9/PwMAAY2NjyLKMy+WiuLiYHTt2kJWVhclkuqbZet4EoCkysmikqKQCpxbBXlLDSreB/u5G
      bBUbWW2eYCgUxWVxT9vSPwoJMmaTYOHAmR4e3V5DVZGHquJM/lfbMD5/5BILhNEgcOhsPwfP
      9uGwmkkpCpC+1pYeH2aTyMNbqwAYC0T44VtN7FhdSnOPj52rS/jOKycJhONUF2fyR5/ZOn3e
      ayWz+NL9q3mrvpNILMGvP7SW1RU509eTlBV+8u45+rwBzEYjn7m3llXluew/1c2eDWV0DYdw
      2kyYDcL0Md6JCJ/fu4q71y0BoGc4QFmem3VVeQC09Pho6hxh0/KiOd/bxs5RXjnUhqqp1Fbk
      8cTOZYRjEj96+yz+cJwMh5UvfmL19IRfURTC4TA+n4+RkRFGR0eRJIns7Gzy8vKorKwkNzf3
      inwBUzkdrsb89QAGC2tXrSYcGKCt24bodqFqIBqMqIqCoqqIBmG66xEEYUEWk2a7SDWbehRk
      O+nzBqks8hBNyMiKgsNmvuT4nAw7JpPI6qX5ROMS8aSMc/I72W474ZhEJCFjMxvpHw0higJ2
      qwmL2cA/vFBPPJmisdPLqkqBwiznJXMHSVY41z2K0SCyYkkOJqMhneDDaGDUH+PY+UGiiRSr
      KnLJdNl4q6GdHLedz9+3mrFAjO+/eZqn767lH16o55f1HRhEA3/+pV2YL0qAXpDlpHvYj6qB
      nFIZDUQxGkRSqoampd2Yd69dMqN7dr176w8neOlgK7/3qS3YLSaefa+JhtYhznaOsq22hHVV
      BZztHOEHbzTwaF0BXq+X8fFxZFnG4/FQXFzMypUrsdlsOByOm540z5sAVEWiu6OVYEKhduNy
      vK2naejX2LBlE9HTR2lIWdi6uRxBSItAUZR5F8DUFsCFEsDjO5bznVcaONE2jCQrPH1PLW7H
      pePtiVCc3WuXMDweoSDLSTwpE5cUskWRiqJM9m5cyp9+dx+iKBCJS3z5wXW09Po40zFC/2iI
      LLeN0UCc771xmk9srGTLimIaO7009/joGBinMNuFoqocaOzlV+5fy9/89Ahmk4FoUuZgUz8n
      2ofJ9Tj4+pOb6BkO8tjOZTisZsw5BhKSwv/3ww8oznUTjCYwGQW+/+YZ/ugz28iYtMNvqy3l
      wqCfv372MFJK5f7NVYwH4/zVTw6jabC+uoCKoswZNbjr3duJcJxst216ol9bnkd73yidvQNs
      Lrdy7MgF+gaGOXqwhY1Fd5Ofn8/atWvxeDyXZBmSZXlOHgWCdisypV0FWZY/EimS/uRP/oS/
      +qu/mvH3JTnFqD+C22nDfZXdS/Wtg3xwppdn9q5m0BfizeMXeGr3Cgxi2glNFAW8/ihJWeF8
      9yjNPT7klEJSVhjwhfnDT2+lqiiDiYjE//n5MdZU5uOdiGK3GmloHeJze1dz97py/vGlejRN
      4+i5AZ7ctZzjzYOYTQYicYlP3b2S0x0jbFxWxKn2YZ6+eyWdgxP86J2zWExGklIKTdPIz3QS
      jkusqsjlKxdNslVVwxeIYjYZ8DitaED3kJ9fHGgGDe7fUsXayoLpifCoP8rgWIjqkku9Qa9n
      BYonZf7yxwfZUp2NIIV5ef8J3GaVgdEgxYX5PLS7jvaRBBabg1975Opu0lMCuNl1ANAXwmaN
      0SBSkOW8Zo6wsrwMeoYDfP3v/wuNdCN74UALmqZht6Z91nMy7JxqH+aFAy2EoglMRgNWs5Gk
      rPBW/QX+cyJCPJkiEpd442gHdTWFVJdkE0uk2H+6h7vXlyMKAheG/KRUlVcOtaGoGpKsUFWS
      hcdhRVU1dq4uRVFV/vXVk4xMRJgIxVFVjQyHld3ryni7oYslBR66hi+NFi2KAvlZzvSQZzzM
      B429vHOiC5NR5L6NlbxxtB2DKLKqIpdDTX28e6KL4lw3z+9v5ref3ERJ7pXeoJqmkUgkCIVC
      jIyM0NndR3NDPV2NJiTBQhw75etXUbzCwamOEfa1RdlQXcAj26/cIaZpEIolON48CJrGtlWl
      OG2Wm7JM6QKYRyRZ4TuvnKDfF5r+zBeIYpgc55/t9IIGOR47757oojDbhcEgcN/GSs52epFk
      hYbWIQqznfR6g+R5HJiNGkPjYTYuLyIcSzIyHuY/3jjNwbN9SLKCqmkoiobRIKJqGuFYku++
      fhKPw8qz7zaxd2Ml/aMh+n1BlpVm09I7Rjie5N2T3aQUDbNRZPmSK/fNjgVjvHo4vU1RVVSM
      RgPlBR5OdwyzrbaUE62DVBVn8u7Jbn7t4fUcOtuPpmn85J0m6pYVcrJtGBGFTVXZZJgkRkdH
      8fv9iKJIXl4e7WMqTz72MCnBwtB4lNMdw1jtDvZurCTDaWXlkly21pZc9T7HkhJ/+eND9I+G
      0Ei7ZP/Zl3ZhMc2+OesCmEdCsSTnu0eB9FvUbDSQkFKMTESoKMxkeVkOpzqG0bT0ZHl9TQGd
      AxOc7hhGVTX6RoOsqyrAZBS5MOjHF4xit5roHPTz2uF2RgNRpJTCB4295Gc52LisiBcOtFCY
      42RkPILJKJKUFGJJGbPRwFv1nbx+pANFVTEa0pNlu9VEJCaRIIXFZGRZWQ5P3rX8kutISCm+
      /UI90YRERYGHtr5xXHYjoWiSTJeN/ae7uX9zFaqmoaoa//zSCUBDROVAw3ne++Aoq4qsjE/4
      efXVEJ+5fzN3b17F9u3bsVqtGI1GuuONHGkd4vGdyzjb5UNKKVQUeHjlUCuCILD0OjvPTrYN
      MxGK8/uf2kJy0h36bKeXTcuLZ/3MdAHMEwkpxcHGXtTJ/bWqqpGQ0iZARdUYmYjgtJkxGQxE
      ExJl+Rmcah9m1B8lnkyRk2HHIAqMTISJJtKxOTUNVEVD1TR6RgKsqczHF4jiC0TTY/HNlZxs
      G6ZnJDBdTkJKkZdpxxeIUZLrYiwYR5IVnHYzbf3jZDqtRBMyDquZLSuKuXdDBaP+KHmZDo6e
      76dz0I/daqIgy4nTbkYQoGvIj8VspLVvDIfVzN3ry7lrTSmakqLQpfHKvjPsWpFFU0cf4bEY
      S0qLefqhXYQlgR/tu8CJYYGxei+fduSwsjydKH1dVT4fnOll1J++niyXjXPdPrLcNlr7xqir
      KbzmvQ5GEtSUZlM36Qu0v7GPYCR5U89NF8BV0LR0UNnzPWmT4/KyHIwGwzXHmIqq8oM3zzAR
      jl9zg7nVbODRHTW89EEr0QR0DIwTjCbJdFrZtDzt135h0E9SSiHLaZu1IDAtIlXTyM9yEJdk
      RiYiqJrGd14+gSCAySiiaXDP+nKaukbp84aoW1ZIOJb2wnTYTCSlFLFJ8+tvPraRisIM/uLH
      hxieiGCzGPH6o8QSMkvyM2jtHWNJgYevPbGRf365AaNBpHckgEnUKPUI1ObIvP3LN4lEIigR
      GUVOMBSz8Ptf/SIvfNDB0ESMlxq8xJIy0YTE4zuX88CWSr79Qj3feGYHboeFklw3GU4LRoOI
      y25hbVU+SUlhaDzM3rqlOG0WpJRCc48PQRBYueTDZ7C0KJOfvNPE3//8KHJK4VyXl8/tvb7D
      3bXQN8RcZUNMXJL5hxeOMx6M0zXkp75liE3LixBF4YoNMZqm0TMS5EBjL2srCzhzYeSq5cSS
      KU61DxNLymgaxBMyK8tz+dWH1rOttoR3T3YRjCQYDcSIJK50H1Y1je7hALKsYjAIpBSNQCTB
      8HgEVdUwGkXGArFp1+KJUByz0UAgkiDDYaGiMJNgJMmXH1xLTWk2P36niUFfGIvJwN6NS/ng
      TB+/cv8a7t9cSUGWi1/Wd3Dw9AUGh4cZ7u9BDg4iBwbo7R+kqiyPDWtqWb9+PQlzNqNxE4MB
      mYY2L9FEClXVkFIKoViS7Aw7Jbludq4uo75lkOqSbDKcVhxWMw6biaPnB5BTyvSaSJ7HwdP3
      1KKqKv/4Yj1ef5S+kSBHz/dTt7wIgyiSnWFLu6V0jBCMJnl8x3K21ZboWyLnizMdIyQlhbhR
      xmgQ8fojtF0jyFJD6xAvfdDC4FiYePLGK8r5mQ68/iga0NQ1SmvfGHkeB9GEjKKqJOVrnyOl
      qEyE4wikN5XbzEZsFiOSrKBNxsIxGkRyPXZae9M7s/I8DjavKKbXGyAv08FLB1uZCMUJx6TJ
      lWqVf/hFPaqm8YM3ThCPBBHkMCNDI+yszSfbYWDcp+HOK6O0MI+esTiFFSupqFhCLClz6Gw/
      /++Xd3Oua5SekQBtfeMYDQIOm5m2vjFsFhND42FOtA2RlJVpRzuAnavLWFWRR1JWsJjS86Vc
      jwOjQeRE6xBuh3V6I82/vHKClh4fa6sKMIgiT9+zkns3lKMoCnlZ1949diMWbXh0bdJikpBS
      0+P2KWJJmUFfiPs2VbJjdSmDvvBVY+b7w3GefbeJlRV5lOZn0DXkv2pZFz8bry+5QeEAABnR
      SURBVD/KrrVLKM1zT29iHxoLY7MYMRsN05vaL3eyE0hPrKd+phSVcFxC06AsPwM5pSLJCrGE
      TEvvGBazkVhc4rEdy8jLtNPnDfKbj29kaWEmkbjEfRuWkGkX6Ovrwz98geG2BppPHqS/u4Px
      UJLiimV87de/zN17H6Bk6Qqy8wp5YHstdquZn753jv/5o4O0949PXp/A+uoCdqwuJdNlJaVq
      ROISD2+tZtQfpbV3jP2TAbku3h8sCAKZrvQe50yXjcJs17RfVUpR0TSNWEJOC14ULxleioJA
      ToadLJd1TmEdF20PcPhcP283dHKibYhn323iM/fWYjIaUBQVXyBGXEpxsm0IKaUgCOkJZteQ
      n7cbOrFZjDy8rYb9p7vpGQnQPRxAED6MyCAKAupF64sCAtqkk7IoCJxoGyKelHHYzCSkFIKQ
      Duwq8GFkh9hlgtMATU1vShdIJ79LSClMBpFYMpU+bvK7JoOIw2pCUY18+8XjQHpS/t//4TUS
      0SBSNMB7Yy1oqoI3KONwZ1FSuYIUJkoLc4jEZXI9dk50jGAQRZKyQq7HyP4zPcQSMr/+8Hoq
      izL59zdOU5zj4s++t4/4ZO/zxU+s4YUDLQQiCXqGAyiahtNqJhyT6B0JkOkquOGzSUgpTrYP
      cbpjhMYLXmrLc4kmZVZV5M3pmV+NRScATYOh8TA/fvssn76nltC5IhJSiuMtg2S77fzHf52m
      a8iPoqq8dridLLcNl92Cpml8/80zLC/LprV3jG985x0CkQSaxmTD/bCRX9z4L/5bENK/xyat
      PBdvFdxQXcDgWJj+0dD0W/5qE+pAOMG2VSX4AjHa+8cJx6UrsqRIKYWJUBSjoBKZGCcZDRAP
      B0BTsDucCBYXMUsuJquT/BwDRkM6kFT3kB9BSPcubruFhKTQ3DOC02YiFJNIBmMUZjvZtrIE
      h81MToadpu5RvvzAWhJSimhC5swFL9GEjMdpTU+evUHWrMrnVx9cx9/89AgVhZ5ptwtNS8+3
      GifnTeuqCrCaTbxzoouCLCd///X7Odvp5cUPWvjjz+2c9gzVtPRK8pkLI2iayoaaoulAv7Nl
      0QkgFEtv3rZZTHQOTnC+e5RHCz089955vP4ISflDr0tZURAFAUlOWyMi8SS/ONByxZBJY2Ye
      qOn9uld6JQoCNPeMEZ2c/Gp8GK7w4p4F0gI63NQ/fb6p/buqqpBKJpBiQRKRAFI8jKqksDvc
      ODM8ODx5mKxODCZTWrRCegjispmRUgq9IwE00m9fszE9Md6+qhRNSyfaeKv+Av5wAkXViEsp
      vP4oA74QmU4bG2oK02P9sTBv1afTL2W5bYxMRMjJsBOKJvE4rTjtZoLR5LQAknKKf3yxnrxJ
      f6CDZ/v4vae2MOALsWNVKS67he2rSjlwphd5sieGtGi+9cJxNE1DUVQOnxvg95/emt6HPEsW
      lQA0TeN48yDLSrPpGBhndWU+PxcEnt/fzMhEOi7lxcMXTYOxUAy33cK7J7sveWNbTIZLxDIT
      phq/KKR7i8s1czURXU1X6e9pxKJRktEgyYifZCyMpqqYrHYsDg+u3BKsVjuCwTQ9hLv4fFPD
      rXBcmhx2aVhMBjYuK+LBLVX862sn6Rry0zEwzprKfL7wiTUYDSLvn+7hWz8/htVi4r89soH3
      T/fwzoku1lbm8+qRNu5eV84bx9oxmwxIsoIkKwjAoaY+VFW9JAFfU5eXbLeNLz2wFoDvvXGa
      pu5Rtq4s5s1jHbjs5nSPKAjTTnMAjRe8tPT4qC7JRlFUmjq9NHf7WFd94+HV5SwaAaQUlV/W
      X+Dlg61YTEaevmcl9c2DDI+FKb0oAsHlwxdZVhgLxqYnWlNj7dk2/otRNW3apApTvi3XX8hR
      lRQpKUEyGiQRDSDFwmiaitnmwurMxJldjMVxWTygySHX1ORAEMAgCpOuEway3DZSikIskUJW
      VDYuK6J7OMDrRzsQECaDYtl571Q3sYTMF+9fy566pey5KExKeb6H146287P3zrGltoStK0uo
      bx2kucc37Z4xNB6mvX+c331qC2bTh29pgyiSUrTpuYuiqBhEgXVVhaiqxs/fbybP4+B3ntp8
      yXHBSIKKQg//4ws7kWWZb/7gIMFo4qaexR0rAE2DE21D7D/dTV6mA4fVxHP7zmMypN/c//HG
      aXI9DmRFve7Nm3o4073CPNXv8mHUlfXXkJMxEuGJySFNBEEQMdscWOwZuHNLMZptGIzX9qjV
      tHSDt5iMGI0i4ViSKT1IKYWRiQiZLisGg8BjO1fQOxLg0/es5Nsv1qMoGv/Pl3eR7bbzb6+f
      4ljzAF+8f+2VZVz2dziWxGE18dVH6xgeD1OQ7eJU+zC/9tCVcYFqK3J5/3QP//LKielI17Xl
      eQgC1C0rom7Z1TfdWM1GekaC/NtrJ5FT6cWzm81xcMcK4FT7EG83dLJnQwWHmvp49Vw/u9ct
      weO04gvEaOz0IgoCJXnpECPD4zcfmnuuaJo2+YaPk4wEScaCJKPprt9sd2NzZZFZuBSjxQYI
      M7J5T/VUTruZT+5awf5T3URi0vRQKMNhIZKQEAWBbLedLJeN4hwX//7GaaIJGYMoTLpTuC/x
      y0lKKSIJCZfdgkEU+M9fniHLZeMTmyp5f9JKpGlpK1sgksA16L+m9cZsNPI7T22eXu1dMbna
      eyNWLc1DSimc6hhBUdK7vWpv0kJ0x+4H+KeXGmjrH0NRtOnECW6HBUVRicQl5JSKhkbzvp+y
      4p5n5rUeM0FVUkjxSHpIE/EjJ+OTDd6FxZGB1eHBaLYiGm7uHZXncZCb6eB89+j02zEppUAQ
      cNpMrFmaR/dIgKSk8OUH1/Ef/3Uatz0dXvGp3St450QXBlHAbDLgnYjyPz6/E4fNxA/fOoui
      qFgtRj577yr+9mdH0pEsgjGKc93poFgmA/GkPDlxFbhnfTkP32Tii6txsm2I98/0UpTtBDR6
      RkI8tnMZtTfIBnM17qge4OI3o5xSKMp28Sv3r+VfXjlBY6c3bXNn/oYxM0XTVFRFQU5ESEy+
      4eXJIY3FkYHdk4fVmYnBaEIQDVe84S9fV5gJhdnO6XFzQkphNIjUVuTRNxokEpPoHgniC6Tj
      DK2rKmDT8mLqWwapKc3G47SyaXkRFwYmUDWNr39yE9UlWfztc0d58q7lVBVncbJ9iOf3nycc
      k9iysphttSU8t+88kXiSHLODP//SLiRJZjyc5OWDrfMqgISUIj/TwWf3rEKWZf7zrXMkZrAK
      fzXuGAFoGqQUjbfqLxCJSwz4QnQN+TnZNox0UajAy5vRQohB0zTUlJQew0cCJKNB5GQc0WDE
      bHXgzCzAVOjAbJtZNOOLG7/ZZMBhNeEPX33eYhAFVFWjsdOLQRSmd2hppIcOG2oK+fE7Zxn1
      p3d8PbythrcaOsl22/jr39zLX/74IM/tO8+m5UXTG3jsVhMpRSUUTVCS58ZsMlBVnMVz+86j
      qCr9oyFG/W2omkZK1TAYBC4MTlCYaedQUx+rl87vAta66gLeP9PLLw60IMkyY8EYq26yjNsu
      gNHRUQ4ePMgTTzxxhXOcpqUbU3RyrGq3mq45/tU0lUFfiLFQjP2neghFk5P29Ju31syEaUuO
      qiLFQsQjfqRYCDkRRTQYsTgzcWYVYnG4EY1mRHHmtuqrvfm3rizhM/fU8r+fP8qgL0RSVi75
      XnGOi/FwHIspnX7IZbfw2I5lvHuyi4ONvVSXZmO3mPidT27EYbPw+pF2QjGJP/z0VobHIxTn
      uglEEnxu72p+tu8cpztG2LG6FIMoUF2SzS+PX2DryhLeauhk5+oyjpzrZ01lHjWl2bx3spvS
      vAw+uWs5z77bxFgwxoaaQu7dMPscANfDbjFx/+ZK/umlBgyikLYuGW/Oq+e2C6C7u5uMjAwC
      gQBer5eKigr6+/sZHR1F08CWkUNvTw8FhYV4hwcoLcxj6dKlNDQ0YLfbqa6upqmpiZyCYhye
      fE63j5CQUgs6zNE0FUWWkBNREtFg+g2fiGIwWbA6MnDlFGOxuzGYbpzx8HpMNeqLF7wON/VN
      +w5VFHq4MOjn3g3l7DvVQ0pR6RsNpV2GCzMpy89gQ00hG5cVsbwshz/7932cbh/mt57YRF1N
      ASkVEpJCSa6LE21DZLvt+AJRinPcaXOpqk3n8BIEgWf2rubN4x3Tu7721FWwamke//xSAy8f
      bKO6JIvfeLQOt8PCf//M9hlHhpstXn+UVw618adf2ElSknn2vXOU5m0n8yZiot5WAWiaRlNT
      E263m66uLlKpFA0NDbhcLrq6ujBbHWQkUiyvLCUzM5POjjbONJ4lGo2ybds2GhoaOHz4CLIq
      EIj1smJNLoqqXXW1da4ocpJkNEQiGiAZCaKkkohGM1ZHBu6cEkw2J0aTBWGWkS4un5OYjCKq
      qk1bawyiQJ7HjpRSCUQSmI0GwvEkA74kqyryWF9dgHtyD/AU2mTiu4e31fCdlxto7vEx6Avx
      xI7lmEwijZ0jCKiMhRJkZ9j4wn1r+Ol75/jgTC+RmEw8meLfXj9FOCax9t786fNaTAae2Lmc
      J3Z+WN/lZTn8xW/sIRhNkJNhv6ltibOlucfH2sp8qoqzkGWZFWW5tPaOsW1V6azPdVsFEAwG
      WbduHbW1tdTX11NTU0N9fT3r1q2jo6MDi82K3W6nqKiIUDgMgM1mw53h4c233iEcjlBQWsHE
      4AC5zg+D0M52wng5qqqgyhJSPEIi4icZDZGSExhNFqyuLDIKyrE6PZONfWZmyWtxeU3L8jKQ
      Usp0RpbVlfk0doxgtRhJKSo5GXYSkkxlUSa5Hjv7T6dDKqqahtVspKYki4ScIpFMUZTt4hvP
      7OB8zyh3rSmjvMDD0FiYVw+10T3sJykpPLpjGW6Hhd94rA5FUdE0JpNcqNSW510zMtvFOG3m
      eYkUN1PK8jNoaB0kFE0iyTI9I37u2VB+U+e6rQLweDxs3JgOebF7924AHn/8cQA++dSniCVl
      fP4ooaSAanKzY/deSvMyOHm2lbgMecXlLKlcTnnVijnVQ9M0UlICKRZOv+GjQdSUjMliw2xz
      4SmswGR1YDTPPenEtZgaxw9PRCjJcaUns4o2PZdJSApOm4kHtlTx/uke5JTCU7tXkp/l4J0T
      XQiA257e+HK8ZZBMlxVBSJt+t9V++GZ84YMWvvbERpaXZhGOy3zrhXp2rC7FbjEhTjb2NZX5
      V6/kR4SlhZmsrSzg754/iqZp7F5XQXGO66bOddvWASYmJnj//fev+r9QLEnvSABF0Sb9wtOf
      C8K1HcqmaGhLvxmuR3pXl4qaSjFw7iCeoipSUgJBEDCarVgcGZitDgTD9ZPIzQcO65RLdDrW
      f+MFL6lJl4CKQg8WszEdy0dO0T0cSPvsmI3ctaaM5WU5aKRdA37xfjOBSAIBAUVTWVOZzwOb
      q64o74UDLdy9vhyPw0xKhZcPtvL4zmULki0+lUpdM3zMXNFIe4SqioLTfvMvptsmgFAoREtL
      yyWfqZrG8Fh4MjZkAqNBRJqDz80UmqaSkuLpIU3YT0pOIooGTDYHvq6zLN30IKLBiCAs7P4g
      UUy/5bNcNiLxJFJKxW5Ji8xsMvAHT29FFAUC4Thuh21Gmc6nGA/FeemDFkYDUZaX5fDYjmVX
      TWztnYjw3P7zVBdn0e8Lsa6qgM0rZh9NYSYspADmq4yPzEqwoqr89N1z/NexDqIJOe2uy+wX
      gLS07ZSUnCAR9qeHNRE/mqZitNixubOw2DMwWe2IBhMt7/+MlfO0EiwKk6FQ5NRF+4fTnxuN
      ItrkRNVsNqCqGh6nlVyPg+2rSjl2foA//eJOLCbjTVtP4kmZaEImw2G5blTlnpEAp9uHqSjK
      ZPXS/HnNAH8xC2UFmuKOiQyXkFIcOz/Az99vnv4s7bR148b/oR9NAikeJhGeIBkLg6Zisjqx
      ubNwZhdisjlnZYOfDWajgUe2V9PUNYrdYqK9f5z4ZDQHgbRlZ0mBh4e3VfNvr53it57YyMry
      XP78e/sJhOMcOdfPF+5bPWcLis1iwnaNxHJTCIJARWEmJTnOG+YJXgzcdgF4/RH+9dWTnO/2
      zfgYTVOR4lO+8AGS8bQvvNWRgdnuwp1XdkNPydlgMRnIdNkY9UexWYyomobTZmbHqlJOtg9j
      NRvxTkRZW5nP5+9bQ1v/GAcaexER6PeFsJqNfPETayjJdfNWfScHGntpH5ggL8vBZ+9dRVGO
      65ZaUXQ+5LYL4KfvniPTabtmNISpN7wiJ0hGQ8RD48iJKAgCZqtz2ixpsthBmJtJ8nJsFiN1
      NUUEown+9At30T4wzmuH27BbTHxmzyqKc9x8ds8qGi948TitVJdmIYoCK5bksmIy3ODgWIjv
      vnqKobEw53t8OG1mHtu+jGhC4pk9q7CYjB/JbCuLhVsgAIVzDccYk0xs3lSH3XzpMGQiFEdK
      KZdu+1MV5HiEZCxEPDxBKhlHEERMVgc2dzYZBRXpMfw8DmkcVhNrqwoQBYHlS3IoynHS0jOG
      ySiyp24dNouJdVUFrFmal84uODnxsllM14xhCVCU7ebXH17PvlPdOO1mvv7JTWQ4Fs6cqjM7
      FlwAWngIyVPDOmuQkWCUikl7bXo/p0LdsgKefbsRKR4mFhxDikeQYiEE0YDZ7sLhycdid2Ew
      WRFukNn8WohCehgjpVQcVhP3rC8nLqW4MDCBP9vJstJsVi/NvSK62NqledPlqZM+RVPZRi6u
      x5Qd4VqfFec4+eInVl9y3Zfco8m8BlNcnFnl8uu9/LvX++x6dbo4a8pcznm976qqesm13qhO
      N3OdU/fqZo9f+B5ASWG0WDCbDKQmNy9omkY8HufcuXMkhoZYahqiV40RTaWwuT/c/HE1s2SG
      w0JJXtrvHMBsFDEa0nHsB3whCrIcrKsunB5WiIKAzWygJMfB8ESMLKeZDIcZQRA53jbCuX0G
      9tRVsLEqm0TiQw/LqQZiMHzonjyV1knTtEssD1MP4GJnPkVJB6u62EQ31fgvPufU8aIoTkeb
      k2V5+veLz3mtOk0lG7k4It6N6qQoCqlU6qrnvFqdpo6/Vp2udp2Xi32m92k2dUomkxiNxhnX
      6fLjF1wAgruQ8KmDHFRMbN5RPF3RqUpuWL+OBx+4H5PZwsBYhMNN/UiptIejx2klGE1Smudm
      xZIcQMBuMaZj41ylJ7hRgozcrEtz9u6pq+SdZUXcf5UFo2txeWjEhWChzYeQFtlCW4FuhRnU
      ZDJ9xM2gopUd9953xcdOp5O77rrrks+qSyxUl8xfrtjZoGkaPp+P3NzcRW8aXEws2tCIl+Pz
      +XjttdeIRqO3uyo6t5Dbbgb9qNDR0cG2bdvo7+/H6/WyevVqLly4QGdnJ9FolF27dlFfX09d
      XR1nz54lmUxy9913c+LECeLxOBs2bKC+vp6cnBweeuihBR0i6cwf+lMiPXfo7Oyks7OTjo4O
      SkpKOHz4MLm5uSQSCdasWYOqqmzevJmcnBxcLheyLDMyMsLWrVvJzc2lt7eX8vJyiouLZ5Wn
      WOf2ovcApCeEu3fvpqysjM7OToqLiwkEApSVlVFbW0s4HKaiogKj0YjNZsNqtVJTU0NpaSlH
      jx4lGAzy+OOPc/LkSeBKk57OR5ePjDPcfHAr0qRebAUKhUI0NzdTWFjIkiVLZl3fa6FbgWbG
      x94ZTpavjLk/F6a0PLXAMxM2bdo063pMLajYbDbq6tL5defzWlRVnfd7c7UyphbbFrKMW3Ed
      cynjtvUAC8HUItt8p1661WUsRO94OalU6oqFpvlmoa9janFrLvsB9EmwzqLmjuoBruVX8nEs
      Y6En0nfCdczHNdxRAtDRmS0f/yGQphEeH6atawCA8bExFDnB4MjYvAbH8nt7OHTwMKOhBP6x
      MVJqisGhkXkrQ0slaGw4yvHT50nKCuMTE6SiY4z44/NUwmQ5mkLz2TMklPS9SsUD8xoZO5WI
      cPzQfo6cOE8sFCKcTOL3jRBNzN+EW44HqT9yiF5vkODYGLKmMjA4eFPP4uMvADQSioFUPATA
      uM9HX2cbosXBfHa+KcHGlk21DHT34/f5GOhuQTE5568MTaBy1QZyjBK+UJQx7xDnWvrxZMzv
      3gFfbysjviBxBXzeYdraunE656+MaDRA3pI1bN9YSyoYxB8cpXswgHUWG/xvRMu58yzbsJXi
      bCdBn4/h/jYSws0974+/AASR3Ly86RB+gZFuWr1JCjzz23AyXDbaLgxQVVNOeHyAM91BSnMc
      Nz5whggmC2M9zfQFkritZnqaT5F0ZGOZRxUriSDDMStLcuxoaAxeaGJCs+M0z59FyyBCT1sj
      Bw6fREbizJFjuEqWYJjH64hEg5w9dojTrT3Ew6Mcb/aypCDjxgdehY+/ADSV8dFhfD4f48EI
      noIKNlVm0dY7etX8WjdL0+lT2N0ZyMkkruwSdq0ppaljcN7KkKJBNFsm+XYDY+EYFau3kC37
      GI1cmTX+ZkkmE0THBmlsbmVwxE9xzTrKbEkGJubRAVA1UFZViV2TSKhm6u7ZQ6znPFFp/oIU
      5+UWUFRejpKMYnPlsWdrDU0t3dwg6c5V+fhPgjWVkaF+ookUDk8uGTYjVpuFcCSOy+mct/22
      3sEeIgkFhycHj82E2WYjGo7gcLkQ56EMNSUxPDSEYrRTXJCDlExiNYuE4xrueRyiACSiEYw2
      J3IihtVqJBxVcN9EYNmroaaSDA0OYXHnkmk3oRqNaFICzWCZt+BbqpxgYHAYT34xFi2F0W4n
      FgrhcLln/Sw+/gLQ0ZkDH/8hkI7OHNAFoLOo0QWgs6jRBaCzqNEFoLOo0QWgs6jRBaCzqNEF
      oLOo0QWgs6jRBaCzqNEFoLOo+f8BUZqUgAYmVbUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='scatterplot of sqftand bhk vs price ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='sqft bins details' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='sqft bins with count lod' width='192'>
      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
    </thumbnail>
    <thumbnail height='179' name='top n locations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='treemap on area type' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
